{"version":3,"sources":["compression/compressors.tsx","components/CompressorSettingsEditor.tsx","compression/utils.ts","compression/algorithms.ts","visualization/common.ts","visualization/drawing.tsx","visualization/PhrasesVisualization.tsx","components/CompressorOutput.tsx","pages/Compare.tsx","visualization/Lz77Visualization.tsx","visualization/RlzVisualization.tsx","visualization/RelzVisualization.tsx","visualization/RelzRecVisualization.tsx","components/EmbedUrl.tsx","components/StepControls.tsx","pages/StepByStep.tsx","components/AppNavbar.tsx","hooks.ts","pages/Embed.tsx","pages/Quiz.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["availableCompressors","lz77","type","title","needsReference","needsPrefixSize","needsWindowSize","needsRecursionLimit","rlz","relz","CompressorSettingEditor","props","settings","update","onChange","compressor","Card","className","Header","Row","Col","Button","variant","size","onClick","remove","icon","faTrashAlt","Body","Form","Group","as","Label","column","xs","Control","value","windowSize","e","parseInt","target","prefixSize","recursionLimit","reference","indexOfSubArray","array","subarray","outer","i","length","h","lastIndexOfSubArray","stringToCodePoints","input","result","codePoint","codePointAt","push","compressLz77","compressWithSlidingWindow","compressRlz","pos","phraseLength","lastOccurrence","currentPhrase","slice","currentOccurrence","symbol","l","p","windowStart","Math","max","min","compressRlzPrefix","prefixLength","prefixPhrases","suffixPhrases","phrase","relzMapping","symbolToPhraseMapping","Map","contentToSymbolMapping","mappedInput","getMapping","currentContent","content","isEqual","newMetaSymbol","set","extractLzLikeParsing","phrases","mapping","positionOffset","sum","map","mappedPhrase","get","undefined","Error","mappedPos","sumBy","c","mappedLength","compressRelzRecursive","passes","metaSymbols","metaSymbolsPhrases","suffixPhrasesCompressed","suffixMetaSymbols","suffixMetaSymbolsPhrases","phrasesCompressed","computeData","codePoints","stepsCount","referenceCodePoints","firstPassPhrases","metaSymbolPhrases","compressRelz","lastPass","steps","flatMap","pass","reverse","suffixPhrase","TARGET_COLOR","SOURCE_COLOR","SharedDefinitions","id","markerWidth","markerHeight","refX","refY","orient","points","gradientTransform","offset","stopColor","Arrow","x1","x2","y","d","stroke","fill","Arrow2","y1","y2","straight","v1","v2","markerEnd","Character","x","text","color","w","width","height","onMouseEnter","onMouseLeave","style","overflowY","textAlign","verticalAlign","lineHeight","userSelect","CurlyBrace","q","dx","dy","len","sqrt","qx1","qy1","qx2","qy2","tx1","ty1","qx3","qy3","qx4","qy4","path","PhraseDisplay","transform","abs","ShortPhrase","CopyingPhrase","PhrasesVisualization","data","useState","highlightedPhraseIdx","setHighlightedPhraseIdx","highlightedPhrase","characters","split","referenceArrow","forEach","String","fromCodePoint","CompressorOutput","toFixed","Compare","setInput","compressorType","setCompressorType","keys","compressorSettings","setCompressorSettings","Container","FormControl","placeholder","lg","md","Dropdown","ButtonGroup","Toggle","Menu","entries","Item","idx","newSettings","filter","v","Lz77Visualization","arrowStart","arrowTarget","colors","Array","phrasePos","take","shortPhrases","copyingPhrases","currentPos","char","RlzVisualization","referenceColors","RelzVisualization","finalStep","mappingArrows","metaArrowStart","metaArrowTarget","s","metaColors","currentMetaPhrase","backMappingArrows","currentMetaPos","zip","metaP","RelzRecVisualization","lineDistance","step","console","log","passOffsets","reduce","lengths","last","passesVisible","phrasesVisible","mappingsVisible","currentBackMappingPass","phraseDisplays","drop","passIdx","pi","metaPhrase","dropWhile","passCharacters","EmbedUrl","includeStep","setIncludeStep","embedVisualization","setEmbedVisualization","currentQuery","URLSearchParams","pathname","url","window","location","origin","toString","InputGroup","readOnly","Append","navigator","clipboard","writeText","Check","custom","label","checked","StepControls","stepsTotal","stepChanged","updateStep","newStep","fluid","disabled","faFastBackward","faBackward","faForward","faFastForward","StepByStep","currentStep","setCurrentStep","selectedCompressor","setSelectedCompressor","currentCompressor","referenceString","setReferenceString","setWindowSize","setPrefixSize","setRecursionLimit","useEffect","values","name","AppNavbar","useLocation","links","to","faBalanceScaleRight","faStepForward","faQuestion","Navbar","collapseOnSelect","expand","bg","Brand","Link","Collapse","Nav","active","href","faGithub","useQuery","search","Embed","query","prefix","recursion","includes","useSettingsFromQuery","initialStep","setStep","position","bottom","Quiz","Home","Jumbotron","App","embedded","has","useEmbedState","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e1bb9e1.chunk.js","sourcesContent":["export type CompressorType =\n  | \"lz77\"\n  | \"lz-sw\"\n  | \"rlz\"\n  | \"rlz-pref\"\n  | \"relz\"\n  | \"relz-rec\";\n\nexport type CompressorSettings =\n  | {\n      type: \"lz77\";\n    }\n  | {\n      type: \"lz-sw\";\n      windowSize?: number;\n    }\n  | {\n      type: \"rlz\";\n      reference: string;\n    }\n  | {\n      type: \"rlz-pref\";\n      prefixLength: number;\n    }\n  | {\n      type: \"relz\";\n      prefixLength: number;\n    }\n  | {\n      type: \"relz-rec\";\n      prefixLength: number;\n      recursionLimit?: number;\n    };\n\nexport function initialCompressorSettings(\n  type: CompressorType\n): CompressorSettings {\n  if (type === \"lz77\") {\n    return { type: \"lz77\" };\n  } else if (type === \"lz-sw\") {\n    return { type: \"lz-sw\", windowSize: 5 };\n  } else if (type === \"rlz\") {\n    return { type: \"rlz\", reference: \"\" };\n  } else if (type === \"rlz-pref\") {\n    return { type: \"rlz-pref\", prefixLength: 5 };\n  } else if (type === \"relz\") {\n    return { type: \"relz\", prefixLength: 5 };\n  } /* else if (type === \"relz-rec\") */ else {\n    return { type: \"relz-rec\", prefixLength: 5 };\n  }\n}\n\nexport interface Compressor {\n  type: CompressorType;\n  title: string;\n  needsReference: boolean;\n  needsPrefixSize: boolean;\n  needsWindowSize: boolean;\n  needsRecursionLimit: boolean;\n}\n\nexport const availableCompressors: { [type in CompressorType]: Compressor } = {\n  lz77: {\n    type: \"lz77\",\n    title: \"LZ77\",\n    needsReference: false,\n    needsPrefixSize: false,\n    needsWindowSize: false,\n    needsRecursionLimit: false,\n  },\n  \"lz-sw\": {\n    type: \"lz-sw\",\n    title: \"LZ with sliding window\",\n    needsReference: false,\n    needsPrefixSize: false,\n    needsWindowSize: true,\n    needsRecursionLimit: false,\n  },\n  rlz: {\n    type: \"rlz\",\n    title: \"RLZ\",\n    needsReference: true,\n    needsPrefixSize: false,\n    needsWindowSize: false,\n    needsRecursionLimit: false,\n  },\n  \"rlz-pref\": {\n    type: \"rlz-pref\",\n    title: \"RLZ using prefix\",\n    needsReference: false,\n    needsPrefixSize: true,\n    needsWindowSize: false,\n    needsRecursionLimit: false,\n  },\n  relz: {\n    type: \"relz\",\n    title: \"ReLZ\",\n    needsReference: false,\n    needsPrefixSize: true,\n    needsWindowSize: false,\n    needsRecursionLimit: false,\n  },\n  \"relz-rec\": {\n    type: \"relz-rec\",\n    title: \"Recursive ReLZ\",\n    needsReference: false,\n    needsPrefixSize: true,\n    needsWindowSize: false,\n    needsRecursionLimit: true,\n  },\n};\n","import { faTrash, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport {\n  availableCompressors,\n  CompressorSettings,\n  CompressorType,\n} from \"../compression/compressors\";\nimport { Settings } from \"../visualization/common\";\n\ninterface CompressorSettingsEditorProps {\n  type: CompressorType;\n  settings: Settings;\n  onChange?: (settings: Settings) => void;\n  remove?: () => void;\n}\n\nexport function CompressorSettingEditor(\n  props: CompressorSettingsEditorProps\n): JSX.Element {\n  const { type, settings } = props;\n\n  function update(settings: Settings) {\n    if (props.onChange) {\n      props.onChange(settings);\n    }\n  }\n\n  const compressor = availableCompressors[type];\n\n  return (\n    <Card className=\"h-100\">\n      <Card.Header>\n        <Row className=\"d-flex align-items-center\">\n          <Col>\n            <h6>{compressor.title}</h6>\n          </Col>\n          <Col>\n            <Button\n              variant=\"outline-danger\"\n              className=\"float-right\"\n              size=\"sm\"\n              onClick={() => props.remove && props.remove()}\n            >\n              Remove <FontAwesomeIcon icon={faTrashAlt} />\n            </Button>\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body>\n        {type === \"lz77\" && \"no settings\"}\n        <Form>\n          {compressor.needsWindowSize && (\n            <Form.Group as={Row}>\n              <Form.Label column xs=\"4\">\n                Window Size\n              </Form.Label>\n              <Col xs=\"8\">\n                <Form.Control\n                  type=\"number\"\n                  value={settings.windowSize}\n                  onChange={(e) =>\n                    update({\n                      ...settings,\n                      windowSize: parseInt(e.target.value),\n                    })\n                  }\n                />\n              </Col>\n            </Form.Group>\n          )}\n          {compressor.needsPrefixSize && (\n            <Form.Group as={Row}>\n              <Form.Label column xs=\"4\">\n                Prefix Length\n              </Form.Label>\n              <Col xs=\"8\">\n                <Form.Control\n                  type=\"number\"\n                  value={settings.prefixSize}\n                  onChange={(e) =>\n                    update({\n                      ...settings,\n                      prefixSize: parseInt(e.target.value),\n                    })\n                  }\n                />\n              </Col>\n            </Form.Group>\n          )}\n          {compressor.needsRecursionLimit && (\n            <Form.Group as={Row}>\n              <Form.Label column xs=\"4\">\n                Recursion Limit\n              </Form.Label>\n              <Col xs=\"8\">\n                <Form.Control\n                  type=\"number\"\n                  value={settings.recursionLimit}\n                  onChange={(e) =>\n                    update({\n                      ...settings,\n                      recursionLimit: parseInt(e.target.value),\n                    })\n                  }\n                />\n              </Col>\n            </Form.Group>\n          )}\n          {compressor.needsReference && (\n            <Form.Group as={Row}>\n              <Form.Label column xs=\"4\">\n                Reference String\n              </Form.Label>\n              <Col xs=\"8\">\n                <Form.Control\n                  type=\"text\"\n                  value={settings.reference}\n                  onChange={(e) =>\n                    update({\n                      ...settings,\n                      reference: e.target.value,\n                    })\n                  }\n                />\n              </Col>\n            </Form.Group>\n          )}\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n","export function indexOfSubArray<T>(array: T[], subarray: T[]): number {\n  outer: for (let i = 0; i <= array.length - subarray.length; i++) {\n    for (let h = 0; h < subarray.length; h++) {\n      if (array[i + h] !== subarray[h]) {\n        continue outer;\n      }\n    }\n    return i;\n  }\n\n  return -1;\n}\n\nexport function lastIndexOfSubArray<T>(array: T[], subarray: T[]): number {\n  outer: for (let i = array.length - subarray.length; i >= 0; i--) {\n    for (let h = 0; h < subarray.length; h++) {\n      if (array[i + h] !== subarray[h]) {\n        continue outer;\n      }\n    }\n    return i;\n  }\n\n  return -1;\n}\n\nexport function stringToCodePoints(input: string): number[] {\n  const result = [];\n\n  for (var i = 0; i < input.length; i++) {\n    var codePoint = input.codePointAt(i);\n\n    if (!codePoint) {\n      break;\n    }\n\n    result.push(codePoint);\n  }\n\n  return result;\n}\n\nexport function codePointsToString(...codePoints: number[]): string {\n  return String.fromCodePoint(...codePoints);\n}\n","import { indexOfSubArray, lastIndexOfSubArray } from \"./utils\";\nimport { isEqual, sum, sumBy } from \"lodash\";\n\nexport type Phrase =\n  | {\n      type: \"literal\";\n      symbol: number;\n      pos: number;\n      l: 1;\n    }\n  | {\n      type: \"copy\";\n      pos: number;\n      p: number;\n      l: number;\n    };\n\nexport type RlzPhrase = { rlz: true } & (\n  | {\n      type: \"literal\";\n      symbol: number;\n      pos: number;\n      l: 1;\n    }\n  | {\n      type: \"copy\";\n      pos: number;\n      p: number;\n      l: number;\n    }\n);\n\nexport function* compressLz77(input: number[]): Generator<Phrase> {\n  let pos = 0;\n  while (pos < input.length) {\n    let phraseLength = 0;\n    let lastOccurrence = 0;\n    while (pos + phraseLength < input.length) {\n      let currentPhrase = input.slice(pos, pos + phraseLength + 1);\n      let currentOccurrence = lastIndexOfSubArray(\n        input.slice(0, pos + phraseLength),\n        currentPhrase\n      );\n      if (currentOccurrence !== -1) {\n        phraseLength++;\n        lastOccurrence = currentOccurrence;\n      } else {\n        break;\n      }\n    }\n\n    if (phraseLength === 0) {\n      yield { type: \"literal\", pos, symbol: input[pos], l: 1 };\n      pos += 1;\n    } else {\n      yield { type: \"copy\", pos, p: lastOccurrence, l: phraseLength };\n      pos += phraseLength;\n    }\n  }\n}\n\nexport function* compressWithSlidingWindow(\n  input: number[],\n  windowSize: number\n): Generator<Phrase> {\n  let pos = 0;\n  while (pos < input.length) {\n    let phraseLength = 0;\n    let lastOccurrence = 0;\n    while (pos + phraseLength < input.length) {\n      let currentPhrase = input.slice(pos, pos + phraseLength + 1);\n      const windowStart = Math.max(0, pos - windowSize);\n      let currentOccurrence = lastIndexOfSubArray(\n        input.slice(\n          windowStart,\n          Math.min(windowStart + windowSize, pos + phraseLength)\n        ),\n        currentPhrase\n      );\n      if (currentOccurrence !== -1) {\n        phraseLength++;\n        lastOccurrence = currentOccurrence + windowStart;\n      } else {\n        break;\n      }\n    }\n\n    if (phraseLength === 0) {\n      yield { type: \"literal\", pos, symbol: input[pos], l: 1 };\n      pos += 1;\n    } else {\n      yield { type: \"copy\", pos, p: lastOccurrence, l: phraseLength };\n      pos += phraseLength;\n    }\n  }\n}\n\nexport function decompress(phrases: Phrase[]): number[] {\n  let output: number[] = [];\n  for (const phrase of phrases) {\n    if (phrase.type === \"literal\") {\n      output.push(phrase.symbol);\n    } else {\n      for (let i = 0; i < phrase.l; i++) {\n        output.push(output[phrase.p + i]);\n      }\n    }\n  }\n\n  return output;\n}\n\nexport function* compressRlz(\n  input: number[],\n  reference: number[]\n): Generator<RlzPhrase> {\n  let pos = 0;\n  while (pos < input.length) {\n    let phraseLength = 0;\n    let lastOccurrence = 0;\n    while (pos + phraseLength < input.length) {\n      let currentPhrase = input.slice(pos, pos + phraseLength + 1);\n      let currentOccurrence = indexOfSubArray(reference, currentPhrase);\n      if (currentOccurrence !== -1) {\n        phraseLength++;\n        lastOccurrence = currentOccurrence;\n      } else {\n        break;\n      }\n    }\n\n    if (phraseLength === 0) {\n      yield { rlz: true, type: \"literal\", pos, symbol: input[pos], l: 1 };\n      pos += 1;\n    } else {\n      yield {\n        rlz: true,\n        type: \"copy\",\n        pos,\n        p: lastOccurrence,\n        l: phraseLength,\n      };\n      pos += phraseLength;\n    }\n  }\n}\n\nexport function decompressRlz(\n  phrases: RlzPhrase[],\n  reference: number[]\n): number[] {\n  let output: number[] = [];\n  for (const phrase of phrases) {\n    if (phrase.type === \"literal\") {\n      output.push(phrase.symbol);\n    } else {\n      for (let i = 0; i < phrase.l; i++) {\n        output.push(reference[phrase.p + i]);\n      }\n    }\n  }\n\n  return output;\n}\n\nexport function compressRlzPrefix(\n  input: number[],\n  prefixLength: number\n): [Phrase[], Phrase[]] {\n  const prefixPhrases: Phrase[] = [];\n  const suffixPhrases: Phrase[] = [];\n  let pos = 0;\n  while (pos < input.length) {\n    let phraseLength = 0;\n    let lastOccurrence = 0;\n    while (pos + phraseLength < input.length) {\n      let currentPhrase = input.slice(pos, pos + phraseLength + 1);\n      let currentOccurrence = lastIndexOfSubArray(\n        input.slice(0, Math.min(pos + phraseLength, prefixLength)),\n        currentPhrase\n      );\n      if (\n        currentOccurrence !== -1 &&\n        (pos >= prefixLength || pos + phraseLength < prefixLength)\n      ) {\n        phraseLength++;\n        lastOccurrence = currentOccurrence;\n      } else {\n        break;\n      }\n    }\n\n    if (phraseLength === 0) {\n      const phrase: Phrase = { type: \"literal\", pos, symbol: input[pos], l: 1 };\n      if (pos < prefixLength) {\n        prefixPhrases.push(phrase);\n      } else {\n        suffixPhrases.push(phrase);\n      }\n      pos += 1;\n    } else {\n      const phrase: Phrase = {\n        type: \"copy\",\n        pos,\n        p: lastOccurrence,\n        l: phraseLength,\n      };\n      if (pos < prefixLength) {\n        prefixPhrases.push(phrase);\n      } else {\n        suffixPhrases.push(phrase);\n      }\n      pos += phraseLength;\n    }\n  }\n\n  return [prefixPhrases, suffixPhrases];\n}\n\nexport function relzMapping(\n  input: Phrase[],\n  reference: number[]\n): [Map<number, Phrase>, number[]] {\n  const symbolToPhraseMapping: Map<number, Phrase> = new Map();\n  const contentToSymbolMapping: [number[], number][] = [];\n  const mappedInput: number[] = [];\n\n  function getMapping(phrase: Phrase): number {\n    const currentContent =\n      phrase.type === \"literal\"\n        ? [phrase.symbol]\n        : reference.slice(phrase.p, phrase.p + phrase.l);\n    for (const [content, symbol] of contentToSymbolMapping) {\n      if (isEqual(content, currentContent)) {\n        return symbol;\n      }\n    }\n\n    const newMetaSymbol = symbolToPhraseMapping.size;\n    symbolToPhraseMapping.set(newMetaSymbol, phrase);\n    contentToSymbolMapping.push([currentContent, newMetaSymbol]);\n    return newMetaSymbol;\n  }\n\n  for (const phrase of input) {\n    mappedInput.push(getMapping(phrase));\n  }\n\n  return [symbolToPhraseMapping, mappedInput];\n}\n\nfunction extractLzLikeParsing(\n  phrases: Phrase[],\n  mapping: Map<number, Phrase>,\n  input: number[],\n  positionOffset: number\n): Phrase[] {\n  const result: Phrase[] = [];\n\n  for (let i = 0; i < phrases.length; i++) {\n    const pos = sum(result.map((p) => p.l)) + positionOffset;\n    const phrase = phrases[i];\n    if (phrase.type === \"literal\") {\n      const mappedPhrase = mapping.get(phrase.symbol);\n      if (mappedPhrase === undefined) {\n        throw new Error(\"no mapping for symbol \" + phrase.symbol);\n      }\n      result.push({\n        ...mappedPhrase,\n        pos,\n      });\n    } else {\n      const mappedPos =\n        sumBy(\n          input.slice(0, phrase.p).map((c) => mapping.get(c)),\n          (p) => p!.l\n        ) + positionOffset;\n      const mappedLength = sumBy(\n        input.slice(phrase.p, phrase.p + phrase.l).map((c) => mapping.get(c)),\n        (p) => p!.l\n      );\n\n      result.push({ type: \"copy\", pos, p: mappedPos, l: mappedLength });\n    }\n  }\n\n  return result;\n}\n\ninterface RelzResult {\n  firstPassPhrases: Phrase[];\n  metaSymbols: number[];\n  metaSymbolPhrases: Phrase[];\n  phrases: Phrase[];\n}\n\nexport function compressRelz(\n  input: number[],\n  prefixLength: number\n): RelzResult {\n  const [prefixPhrases, suffixPhrases] = [\n    ...compressRlzPrefix(input, prefixLength),\n  ];\n  const firstPassPhrases = [...prefixPhrases, ...suffixPhrases];\n  const [mapping, metaSymbols] = relzMapping(firstPassPhrases, input);\n  const metaSymbolPhrases = [...compressLz77(metaSymbols)];\n  const resultPhrases = extractLzLikeParsing(\n    metaSymbolPhrases,\n    mapping,\n    metaSymbols,\n    0\n  );\n\n  return {\n    firstPassPhrases,\n    metaSymbols,\n    metaSymbolPhrases,\n    phrases: resultPhrases,\n  };\n}\n\nexport interface RelzRecPass {\n  input: number[];\n  prefixPhrases: Phrase[];\n  suffixPhrases: Phrase[];\n  suffixMetaSymbols: number[];\n  suffixMetaSymbolsPhrases: Phrase[];\n  suffixPhrasesCompressed: Phrase[];\n  phrasesCompressed: Phrase[];\n}\nexport interface RelzRecursiveResult {\n  passes: RelzRecPass[];\n  phrases: Phrase[];\n}\n\nexport function compressRelzRecursive(\n  input: number[],\n  prefixLength: number,\n  recursionLimit: number | undefined = undefined\n): RelzRecursiveResult {\n  if (recursionLimit === 0) {\n    return {\n      passes: [],\n      phrases: input.map((c, pos) => ({\n        type: \"literal\",\n        pos,\n        symbol: c,\n        l: 1,\n      })),\n    };\n  }\n\n  const [prefixPhrases, suffixPhrases] = [\n    ...compressRlzPrefix(input, prefixLength),\n  ];\n  if (suffixPhrases.length > 0) {\n    const [mapping, metaSymbols] = relzMapping(\n      suffixPhrases,\n      input.slice(0, prefixLength)\n    );\n    const result = compressRelzRecursive(\n      metaSymbols,\n      prefixLength,\n      recursionLimit && recursionLimit - 1\n    );\n    const metaSymbolsPhrases = result.phrases;\n    const suffixPhrasesCompressed = extractLzLikeParsing(\n      metaSymbolsPhrases,\n      mapping,\n      metaSymbols,\n      prefixLength\n    );\n    const phrases = [...prefixPhrases, ...suffixPhrasesCompressed];\n\n    return {\n      passes: [\n        {\n          input,\n          prefixPhrases,\n          suffixPhrases,\n          suffixMetaSymbols: metaSymbols,\n          suffixMetaSymbolsPhrases: metaSymbolsPhrases,\n          suffixPhrasesCompressed,\n          phrasesCompressed: phrases,\n        },\n        ...result.passes,\n      ],\n      phrases,\n    };\n  } else {\n    return {\n      passes: [\n        {\n          input,\n          prefixPhrases,\n          suffixPhrases: [],\n          suffixMetaSymbols: [],\n          suffixMetaSymbolsPhrases: [],\n          suffixPhrasesCompressed: [],\n          phrasesCompressed: prefixPhrases,\n        },\n      ],\n      phrases: prefixPhrases,\n    };\n  }\n}\n","import { reverse } from \"lodash\";\nimport {\n  compressLz77,\n  compressRelz,\n  compressRelzRecursive,\n  compressRlz,\n  compressRlzPrefix,\n  compressWithSlidingWindow,\n  Phrase,\n  RelzRecPass,\n  RlzPhrase,\n} from \"../compression/algorithms\";\nimport { stringToCodePoints } from \"../compression/utils\";\nimport { CompressorType } from \"../compression/compressors\";\n\nexport interface Lz77VisualizationData {\n  type: \"lz77\";\n  input: string;\n  phrases: Phrase[];\n  stepsCount: number;\n}\n\nexport interface LzSlidingWindowVisualizationData {\n  type: \"lz-sw\";\n  input: string;\n  windowSize: number;\n  phrases: Phrase[];\n  stepsCount: number;\n}\n\nexport interface RlzVisualizationData {\n  type: \"rlz\";\n  input: string;\n  reference: string;\n  phrases: RlzPhrase[];\n  stepsCount: number;\n}\n\nexport interface RlzPrefixVisualizationData {\n  type: \"rlz-pref\";\n  input: string;\n  prefixLength: number;\n  phrases: Phrase[];\n  stepsCount: number;\n}\n\nexport interface RelzVisualizationData {\n  type: \"relz\";\n  input: string;\n  prefixLength: number;\n  firstPassPhrases: Phrase[];\n  metaSymbols: number[];\n  metaSymbolPhrases: Phrase[];\n  phrases: Phrase[];\n  stepsCount: number;\n}\n\ntype RelzRecStep =\n  | { type: \"initial\" }\n  | { type: \"compress\"; pass: number; phrase: number }\n  | { type: \"mapping\"; pass: number }\n  | { type: \"back-mapping\"; pass: number; suffixPhrase: number };\n\nexport interface RelzRecVisualizationData {\n  type: \"relz-rec\";\n  input: string;\n  prefixLength: number;\n  passes: RelzRecPass[];\n  phrases: Phrase[];\n  stepsCount: number;\n  steps: RelzRecStep[];\n}\n\nexport type VisualizationData =\n  | Lz77VisualizationData\n  | LzSlidingWindowVisualizationData\n  | RlzVisualizationData\n  | RlzPrefixVisualizationData\n  | RelzVisualizationData\n  | RelzRecVisualizationData;\n\nexport interface Settings {\n  windowSize: number;\n  prefixSize: number;\n  reference: string;\n  recursionLimit: number;\n}\n\nexport function computeData(\n  type: CompressorType,\n  input: string,\n  settings: Settings\n): VisualizationData {\n  const codePoints = stringToCodePoints(input);\n  if (type === \"lz77\") {\n    const phrases = [...compressLz77(codePoints)];\n    return { type: \"lz77\", input, phrases, stepsCount: phrases.length };\n  } else if (type === \"lz-sw\") {\n    const phrases = [\n      ...compressWithSlidingWindow(codePoints, settings.windowSize),\n    ];\n    return {\n      type: \"lz-sw\",\n      input,\n      phrases,\n      windowSize: settings.windowSize,\n      stepsCount: phrases.length,\n    };\n  } else if (type === \"rlz\") {\n    const { reference } = settings;\n    const referenceCodePoints = stringToCodePoints(reference);\n    const phrases = [...compressRlz(codePoints, referenceCodePoints)];\n    return {\n      type: \"rlz\",\n      input,\n      reference,\n      phrases,\n      stepsCount: phrases.length,\n    };\n  } else if (type === \"rlz-pref\") {\n    const [prefixPhrases, suffixPhrases] = [\n      ...compressRlzPrefix(codePoints, settings.prefixSize),\n    ];\n    const phrases = [...prefixPhrases, ...suffixPhrases];\n    return {\n      type: \"rlz-pref\",\n      input,\n      phrases,\n      prefixLength: settings.prefixSize,\n      stepsCount: phrases.length,\n    };\n  } else if (type === \"relz\") {\n    const result = compressRelz(codePoints, settings.prefixSize);\n    return {\n      type: \"relz\",\n      input,\n      prefixLength: settings.prefixSize,\n      ...result,\n      stepsCount:\n        result.firstPassPhrases.length + result.metaSymbolPhrases.length + 2,\n    };\n  } else {\n    const result = compressRelzRecursive(\n      codePoints,\n      settings.prefixSize,\n      settings.recursionLimit\n    );\n    const lastPass = result.passes.length - 1;\n    const steps: RelzRecStep[] = [\n      { type: \"initial\" },\n      ...result.passes.flatMap((pass, i) => [\n        ...pass.prefixPhrases.map((p, h) => ({\n          type: \"compress\" as const,\n          pass: i,\n          phrase: h,\n        })),\n        ...pass.suffixPhrases.map((p, h) => ({\n          type: \"compress\" as const,\n          pass: i,\n          phrase: h + pass.prefixPhrases.length,\n        })),\n        ...(i === lastPass ? [] : [{ type: \"mapping\" as const, pass: i }]),\n      ]),\n      ...reverse([...result.passes]).flatMap((pass, i) =>\n        pass.suffixPhrasesCompressed.map((p, h) => ({\n          type: \"back-mapping\" as const,\n          pass: result.passes.length - i - 1,\n          suffixPhrase: h,\n        }))\n      ),\n    ];\n    const stepsCount = steps.length;\n    return {\n      type: \"relz-rec\",\n      input,\n      prefixLength: settings.prefixSize,\n      passes: result.passes,\n      phrases: result.phrases,\n      stepsCount,\n      steps,\n    };\n  }\n}\n","const TARGET_COLOR = \"#E1BE6A\";\nconst SOURCE_COLOR = \"#40B0A6\";\n\nexport function SharedDefinitions() {\n  return (\n    <defs>\n      <marker\n        id=\"arrowhead\"\n        markerWidth=\"100\"\n        markerHeight=\"7\"\n        refX=\"9\"\n        refY=\"3.5\"\n        orient=\"auto\"\n      >\n        <polygon points=\"0 0, 10 3.5, 0 7\" />\n      </marker>\n\n      <linearGradient id=\"split-color\" gradientTransform=\"rotate(45)\">\n        <stop offset=\"75%\" stopColor={TARGET_COLOR} />\n        <stop offset=\"75%\" stopColor={SOURCE_COLOR} />\n      </linearGradient>\n    </defs>\n  );\n}\n\nexport interface ArrowProps {\n  x1: number;\n  x2: number;\n  y: number;\n}\n\nexport function Arrow(props: ArrowProps) {\n  const { x1, x2, y } = props;\n  const l = x2 - x1;\n  return (\n    <path\n      d={`M ${x1} ${y} v -20 h ${l} v 19`}\n      marker-end=\"url(#arrowhead)\"\n      stroke=\"black\"\n      fill=\"none\"\n    />\n  );\n}\n\nexport interface ArrowProps2 {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  straight?: boolean;\n}\n\nexport function Arrow2(props: ArrowProps2) {\n  const { x1, y1, x2, y2, straight } = props;\n\n  if (straight) {\n    const v1 = y1 < y2 ? 10 : -10;\n    const v2 = y1 < y2 ? 20 : -20;\n\n    return (\n      <path\n        d={`M ${x1} ${y1} v ${v1} L ${x2} ${y2 - 20} v ${v2}`}\n        markerEnd=\"url(#arrowhead)\"\n        stroke=\"black\"\n        fill=\"none\"\n      />\n    );\n  } else {\n    const l = x2 - x1;\n    const h = (y2 - y1) / 2;\n\n    const v1 = y2 < y1 ? h : -h;\n    const v2 = y2 < y1 ? h : -h;\n    return (\n      <path\n        d={`m ${x1} ${y1} v ${v1} h ${l} v ${v2}`}\n        marker-end=\"url(#arrowhead)\"\n        stroke=\"black\"\n        fill=\"none\"\n      />\n    );\n  }\n}\n\nexport type CharacterColor = \"none\" | \"source\" | \"target\" | \"source-target\";\n\nexport interface CharacterProps {\n  x: number;\n  y: number;\n  w?: number;\n  h?: number;\n  text: string;\n  color?: CharacterColor;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nexport function Character(props: CharacterProps) {\n  const { x, y, text, color } = props;\n  const w = props.w || 30;\n  const h = props.h || 30;\n  const fill =\n    color === \"source\"\n      ? SOURCE_COLOR\n      : color === \"target\"\n      ? TARGET_COLOR\n      : color === \"source-target\"\n      ? \"url(#split-color)\"\n      : \"none\";\n  return (\n    <>\n      <rect\n        x={x}\n        y={y}\n        width={w}\n        height={h}\n        fill={fill}\n        stroke=\"black\"\n      />\n      <foreignObject\n        x={x}\n        y={y}\n        width={w}\n        height={h}\n        onMouseEnter={props.onMouseEnter}\n        onMouseLeave={props.onMouseLeave}\n      >\n        <div\n          style={{\n            //   width: \"30px\",\n            //   height: \"30px\",\n            overflowY: \"auto\",\n            textAlign: \"center\",\n            verticalAlign: \"middle\",\n            lineHeight: `${h}px`,\n            userSelect: \"none\",\n          }}\n        >\n          {text}\n        </div>\n      </foreignObject>\n    </>\n  );\n}\n\nexport interface CurlyBraceProps {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  w: number;\n  q: number;\n}\n\nexport function CurlyBrace(props: CurlyBraceProps) {\n  const { x1, y1, x2, y2, w, q } = props;\n  var dx = x1 - x2;\n  var dy = y1 - y2;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  dx = dx / len;\n  dy = dy / len;\n\n  //Calculate Control Points of path,\n  const qx1 = x1 + q * w * dy;\n  const qy1 = y1 - q * w * dx;\n  const qx2 = x1 - 0.25 * len * dx + (1 - q) * w * dy;\n  const qy2 = y1 - 0.25 * len * dy - (1 - q) * w * dx;\n  const tx1 = x1 - 0.5 * len * dx + w * dy;\n  const ty1 = y1 - 0.5 * len * dy - w * dx;\n  const qx3 = x2 + q * w * dy;\n  const qy3 = y2 - q * w * dx;\n  const qx4 = x1 - 0.75 * len * dx + (1 - q) * w * dy;\n  const qy4 = y1 - 0.75 * len * dy - (1 - q) * w * dx;\n\n  const path = `M ${x1} ${y1} Q ${qx1} ${qy1} ${qx2} ${qy2} T ${tx1} ${ty1} M ${x2} ${y2} Q ${qx3} ${qy3} ${qx4} ${qy4} T ${tx1} ${ty1}`;\n\n  return <path d={path} stroke=\"black\" fill=\"none\"></path>;\n}\n\nexport interface PhraseDisplayProps {\n  x: number;\n  y: number;\n  l: number;\n  text: string;\n  w?: number;\n}\n\nexport function PhraseDisplay(props: PhraseDisplayProps) {\n  const { x, y, l, text } = props;\n  if (l === 1) {\n    return (\n      <foreignObject x={x - 20} y={y} width=\"60\" height=\"40\">\n        <div\n          style={{\n            //   width: \"30px\",\n            //   height: \"30px\",\n            overflowY: \"auto\",\n            textAlign: \"center\",\n            verticalAlign: \"middle\",\n            lineHeight: \"40px\",\n            userSelect: \"none\",\n            transform: \"rotate(-45deg)\",\n          }}\n        >\n          {text}\n        </div>\n      </foreignObject>\n    );\n  } else {\n    const x1 = x + 3;\n    const x2 = x + l * 30 - 3;\n    const w = props.w ?? 50;\n    return (\n      <>\n        <CurlyBrace x1={x1} x2={x2} y1={y} y2={y} w={10} q={0.6}></CurlyBrace>\n        <foreignObject\n          x={x1 + Math.abs(x2 - x1) / 2 - w / 2}\n          y={y}\n          width={w}\n          height=\"40\"\n        >\n          <div\n            style={{\n              //   width: \"30px\",\n              //   height: \"30px\",\n              overflowY: \"auto\",\n              textAlign: \"center\",\n              verticalAlign: \"middle\",\n              lineHeight: \"40px\",\n              userSelect: \"none\",\n            }}\n          >\n            {text}\n          </div>\n        </foreignObject>\n      </>\n    );\n  }\n}\n\nexport interface ShortPhraseProps {\n  x: number;\n  y: number;\n  text: string;\n}\n\nexport function ShortPhrase(props: ShortPhraseProps) {\n  const { x, y, text } = props;\n  return (\n    <foreignObject x={x} y={y} width=\"60\" height=\"40\">\n      <div\n        style={{\n          //   width: \"30px\",\n          //   height: \"30px\",\n          overflowY: \"auto\",\n          textAlign: \"center\",\n          verticalAlign: \"middle\",\n          lineHeight: \"40px\",\n          userSelect: \"none\",\n          transform: \"rotate(-45deg)\",\n        }}\n      >\n        {text}\n      </div>\n    </foreignObject>\n  );\n}\n\nexport interface CopyingPhraseProps {\n  x1: number;\n  x2: number;\n  y: number;\n  p: number;\n  l: number;\n  w?: number;\n}\n\nexport function CopyingPhrase(props: CopyingPhraseProps) {\n  const { x1, x2, y, p, l } = props;\n  const w = props.w ?? 50;\n\n  return (\n    <>\n      <CurlyBrace x1={x1} x2={x2} y1={y} y2={y} w={10} q={0.6}></CurlyBrace>\n      <foreignObject\n        x={x1 + Math.abs(x2 - x1) / 2 - w / 2}\n        y={y}\n        width={w}\n        height=\"40\"\n      >\n        <div\n          style={{\n            //   width: \"30px\",\n            //   height: \"30px\",\n            overflowY: \"auto\",\n            textAlign: \"center\",\n            verticalAlign: \"middle\",\n            lineHeight: \"40px\",\n            userSelect: \"none\",\n          }}\n        >\n          {`(${p}, ${l})`}\n        </div>\n      </foreignObject>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { VisualizationData } from \"./common\";\nimport {\n  Arrow,\n  ArrowProps,\n  Character,\n  CharacterProps,\n  PhraseDisplay,\n  PhraseDisplayProps,\n  SharedDefinitions,\n} from \"./drawing\";\n\nexport interface PhrasesVisualizationProps {\n  data: VisualizationData;\n}\n\nexport function PhrasesVisualization(props: PhrasesVisualizationProps) {\n  const { data } = props;\n  const [highlightedPhraseIdx, setHighlightedPhraseIdx] = useState<number>();\n  const highlightedPhrase =\n    highlightedPhraseIdx !== undefined\n      ? data.phrases[highlightedPhraseIdx]\n      : undefined;\n\n  const characters: CharacterProps[] = data.input.split(\"\").map((c, i) => ({\n    text: c,\n    x: i * 30 + 30,\n    y: 30,\n  }));\n  const phrases: PhraseDisplayProps[] = [];\n  let referenceArrow: ArrowProps | undefined = undefined;\n\n  if (data.type === \"rlz\") {\n    data.phrases.forEach((p, i) => {\n      const pos = p.pos;\n      if (p.type === \"literal\") {\n        const text = `(${String.fromCodePoint(p.symbol)},0)`;\n        phrases.push({\n          x: pos * 30 + 30,\n          y: 65,\n          l: 1,\n          text,\n        });\n      } else {\n        const text = `(${p.p},${p.l})`;\n        phrases.push({\n          x: pos * 30 + 30,\n          y: 65,\n          l: p.l,\n          text,\n        });\n      }\n      for (let h = 0; h < p.l; h++) {\n        characters[p.pos + h].onMouseEnter = () => setHighlightedPhraseIdx(i);\n        characters[p.pos + h].onMouseLeave = () =>\n          setHighlightedPhraseIdx(undefined);\n      }\n    });\n  } else {\n    data.phrases.forEach((p, i) => {\n      const pos = p.pos;\n      if (p.type === \"literal\") {\n        const text = `(${String.fromCodePoint(p.symbol)},0)`;\n        phrases.push({\n          x: pos * 30 + 30,\n          y: 65,\n          l: 1,\n          text,\n        });\n      } else {\n        const text = `(${p.p},${p.l})`;\n        phrases.push({\n          x: pos * 30 + 30,\n          y: 65,\n          l: p.l,\n          text,\n        });\n      }\n      for (let h = 0; h < p.l; h++) {\n        characters[p.pos + h].onMouseEnter = () => setHighlightedPhraseIdx(i);\n        characters[p.pos + h].onMouseLeave = () =>\n          setHighlightedPhraseIdx(undefined);\n      }\n    });\n  }\n\n  if (highlightedPhrase) {\n    for (let i = 0; i < highlightedPhrase.l; i++) {\n      characters[highlightedPhrase.pos + i].color = \"target\";\n      if (data.type !== \"rlz\" && highlightedPhrase.type === \"copy\") {\n        if (characters[highlightedPhrase.p + i].color === \"target\") {\n          characters[highlightedPhrase.p + i].color = \"source-target\";\n        } else {\n          characters[highlightedPhrase.p + i].color = \"source\";\n        }\n      }\n    }\n\n    if (data.type !== \"rlz\" && highlightedPhrase.type === \"copy\") {\n      referenceArrow = {\n        x1: highlightedPhrase.pos * 30 + 45,\n        x2: highlightedPhrase.p * 30 + 45,\n        y: 30,\n      };\n    }\n  }\n\n  const width = data.input.length * 30 + 60;\n  const height = 120;\n\n  return (\n    <svg width={width} height={height}>\n      <SharedDefinitions />\n\n      {characters.map((props, i) => (\n        <Character key={i} {...props} />\n      ))}\n\n      {phrases.map((props, i) => (\n        <PhraseDisplay key={i} {...props} />\n      ))}\n\n      {referenceArrow && <Arrow {...referenceArrow} />}\n    </svg>\n  );\n}\n","import React from \"react\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport {\n  Phrase,\n  RlzPhrase,\n  compressLz77,\n  compressWithSlidingWindow,\n  compressRlz,\n  compressRlzPrefix,\n  compressRelz,\n  compressRelzRecursive,\n} from \"../compression/algorithms\";\nimport { CompressorType } from \"../compression/compressors\";\nimport { stringToCodePoints } from \"../compression/utils\";\nimport { computeData, Settings } from \"../visualization/common\";\nimport { PhrasesVisualization } from \"../visualization/PhrasesVisualization\";\n\ninterface CompressorOutputProps {\n  input: string;\n  type: CompressorType;\n  settings: Settings;\n}\n\nexport function CompressorOutput(props: CompressorOutputProps): JSX.Element {\n  const { type, settings, input } = props;\n  const data = computeData(type, input, settings);\n\n  return (\n    <Card style={{ height: \"100%\" }}>\n      <Card.Body>\n        <Row className=\"overflow-auto\">\n          <Col>\n            <PhrasesVisualization data={data} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            z = {data.phrases.length}\n            {type === \"rlz\" ? ` (+ ${settings.reference.length})` : \"\"}\n          </Col>\n          <Col>l/z = {(input.length / data.phrases.length).toFixed(2)}</Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport {\n  availableCompressors,\n  CompressorSettings,\n  CompressorType,\n  initialCompressorSettings,\n} from \"../compression/compressors\";\nimport { CompressorSettingEditor } from \"../components/CompressorSettingsEditor\";\nimport { CompressorOutput } from \"../components/CompressorOutput\";\nimport FormControl from \"react-bootstrap/esm/FormControl\";\nimport { entries, keys } from \"lodash\";\nimport { Settings } from \"../visualization/common\";\n\nexport function Compare() {\n  const [input, setInput] = useState(\"AAABBBCCCC\");\n  const [compressorType, setCompressorType] = useState<CompressorType>(\"lz77\");\n\n  const [compressorSettings, setCompressorSettings] = useState<\n    [CompressorType, Settings][]\n  >(\n    keys(availableCompressors).map((type) => [\n      type as CompressorType,\n      { windowSize: 5, reference: \"\", prefixSize: 5, recursionLimit: 5 },\n    ])\n  );\n\n  function addCompressor() {\n    setCompressorSettings([\n      ...compressorSettings,\n      [\n        compressorType,\n        { windowSize: 5, reference: \"\", prefixSize: 5, recursionLimit: 5 },\n      ],\n    ]);\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        <Col>\n          <Card>\n            <Card.Header>Input</Card.Header>\n            <Card.Body>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Input Text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n              ></FormControl>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row className=\"mt-5\">\n        <Col lg=\"4\">\n          <h2>Compressors</h2>\n        </Col>\n        <Col lg=\"8\" className=\"d-none d-lg-block\">\n          <h2>Outputs</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs=\"12\" md=\"4\" lg=\"3\">\n          <Dropdown as={ButtonGroup} className=\"w-100\">\n            <Button onClick={addCompressor} className=\"w-75\">\n              {\"Add \" + availableCompressors[compressorType].title}\n            </Button>\n\n            <Dropdown.Toggle split />\n\n            <Dropdown.Menu>\n              {entries(availableCompressors).map(([type, { title }]) => (\n                <Dropdown.Item\n                  key={type}\n                  onClick={() => setCompressorType(type as CompressorType)}\n                >\n                  {title}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n\n      {compressorSettings.map(([type, settings], idx) => (\n        <Row key={idx} className=\"mt-4\">\n          <Col xs=\"12\" lg=\"4\">\n            <CompressorSettingEditor\n              type={type}\n              settings={settings}\n              onChange={(newSettings) =>\n                setCompressorSettings(\n                  compressorSettings.map(([type, settings], i) =>\n                    idx === i ? [type, newSettings] : [type, settings]\n                  )\n                )\n              }\n              remove={() =>\n                setCompressorSettings(\n                  compressorSettings.filter((v, i) => i !== idx)\n                )\n              }\n            ></CompressorSettingEditor>\n          </Col>\n          <Col xs=\"12\" lg=\"8\" className=\"mt-1 mt-lg-0\">\n            <CompressorOutput\n              type={type}\n              settings={settings}\n              input={input}\n            ></CompressorOutput>\n          </Col>\n        </Row>\n      ))}\n      {compressorSettings.length === 0 && (\n        <Row className=\"justify-content-center mt-5\">\n          <Col xs=\"auto\">\n            <h4>No compressors added yet...</h4>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n","import { sum, take } from \"lodash\";\nimport React from \"react\";\nimport { Lz77VisualizationData } from \"./common\";\nimport {\n  Arrow,\n  Character,\n  CharacterColor,\n  CopyingPhrase,\n  CopyingPhraseProps,\n  SharedDefinitions,\n  ShortPhrase,\n  ShortPhraseProps,\n} from \"./drawing\";\n\nexport interface Lz77VisualizationProps {\n  data: Lz77VisualizationData;\n  currentPhrase: number;\n}\n\nexport function Lz77Visualization(props: Lz77VisualizationProps) {\n  const { data, currentPhrase } = props;\n  const { input, phrases } = data;\n\n  const colors: CharacterColor[] = new Array(input.length).fill(\"none\");\n  let arrowStart: number | undefined;\n  let arrowTarget: number | undefined;\n  if (currentPhrase !== undefined && currentPhrase < phrases.length) {\n    const phrase = phrases[currentPhrase];\n    if (phrase.type === \"copy\") {\n      for (let i = 0; i < phrase.l; i++) {\n        colors[phrase.p + i] = \"source\";\n      }\n      arrowTarget = phrase.p;\n    }\n    const phrasePos = sum(take(phrases, currentPhrase).map((p) => p.l));\n    arrowStart = phrasePos;\n    for (let i = 0; i < phrase.l; i++) {\n      colors[phrasePos + i] =\n        colors[phrasePos + i] === \"none\" ? \"target\" : \"source-target\";\n    }\n  }\n\n  const shortPhrases: ShortPhraseProps[] = [];\n  const copyingPhrases: CopyingPhraseProps[] = [];\n  if (currentPhrase !== undefined) {\n    let currentPos = 0;\n    take(phrases, currentPhrase + 1).forEach((p) => {\n      if (p.type === \"literal\") {\n        shortPhrases.push({\n          x: currentPos * 30,\n          y: 90,\n          text: `(${String.fromCodePoint(p.symbol)},0)`,\n        });\n      } else if (p.l === 1) {\n        shortPhrases.push({\n          x: currentPos * 30,\n          y: 90,\n          text: `(${p.p},${p.l})`,\n        });\n      } else {\n        copyingPhrases.push({\n          x1: currentPos * 30 + 22,\n          x2: currentPos * 30 + p.l * 30 + 18,\n          y: 90,\n          ...p,\n        });\n      }\n      currentPos += p.l;\n    });\n  }\n\n  return (\n    <svg height=\"160\" width={input.length * 30 + 40}>\n      <SharedDefinitions></SharedDefinitions>\n\n      {input.split(\"\").map((char, i) => (\n        <Character\n          key={i}\n          x={i * 30 + 20}\n          y={50}\n          text={char}\n          color={colors[i]}\n        ></Character>\n      ))}\n\n      {arrowStart !== undefined && arrowTarget !== undefined && (\n        <Arrow\n          x1={arrowStart * 30 + 35}\n          x2={arrowTarget * 30 + 35}\n          y={50}\n        ></Arrow>\n      )}\n\n      {shortPhrases.map((props, i) => (\n        <ShortPhrase key={i} {...props}></ShortPhrase>\n      ))}\n\n      {copyingPhrases.map((props, i) => (\n        <CopyingPhrase key={i} {...props}></CopyingPhrase>\n      ))}\n    </svg>\n  );\n}\n","import { sum, take } from \"lodash\";\nimport React from \"react\";\nimport { RlzVisualizationData } from \"./common\";\nimport { CharacterColor, ShortPhraseProps, CopyingPhraseProps, Character, CopyingPhrase, SharedDefinitions, ShortPhrase, Arrow2 } from \"./drawing\";\n\nexport interface RlzVisualizationProps {\n  data: RlzVisualizationData;\n  currentPhrase?: number;\n}\n\nexport function RlzVisualization(props: RlzVisualizationProps) {\n  const { data, currentPhrase } = props;\n  const {input, reference, phrases} = data;\n\n  const colors: CharacterColor[] = new Array(input.length).fill(\"none\");\n  const referenceColors: CharacterColor[] = new Array(reference.length).fill(\"none\");\n  let arrowStart: number | undefined;\n  let arrowTarget: number | undefined;\n  if (currentPhrase !== undefined && currentPhrase < phrases.length) {\n    const phrase = phrases[currentPhrase];\n    if (phrase.type === \"copy\") {\n      for (let i = 0; i < phrase.l; i++) {\n        referenceColors[phrase.p + i] = \"source\";\n      }\n      arrowTarget = phrase.p;\n    }\n    const phrasePos = sum(take(phrases, currentPhrase).map((p) => p.l));\n    arrowStart = phrasePos;\n    for (let i = 0; i < phrase.l; i++) {\n      colors[phrasePos + i] = \"target\"\n    }\n  }\n\n  const shortPhrases: ShortPhraseProps[] = [];\n  const copyingPhrases: CopyingPhraseProps[] = [];\n  if (currentPhrase !== undefined) {\n    let currentPos = 0;\n    take(phrases, currentPhrase + 1).forEach((p) => {\n      if (p.type === \"literal\") {\n        shortPhrases.push({\n          x: currentPos * 30,\n          y: 130,\n          text: `(${String.fromCodePoint(p.symbol)},0)`,\n        });\n      } else if (p.l === 1) {\n        shortPhrases.push({\n          x: currentPos * 30,\n          y: 130,\n          text: `(${p.p},${p.l})`,\n        });\n      } else {\n        copyingPhrases.push({\n          x1: currentPos * 30 + 22,\n          x2: currentPos * 30 + p.l * 30 + 18,\n          y: 130,\n          ...p,\n        });\n      }\n      currentPos += p.l;\n    });\n  }\n\n  return (\n    <svg height=\"200\" width=\"100%\">\n      <SharedDefinitions></SharedDefinitions>\n\n           {reference.split(\"\").map((char, i) => (\n        <Character\n          x={i * 30 + 20}\n          y={10}\n          text={char}\n          color={referenceColors[i]}\n        ></Character>\n      ))}\n\n      {input.split(\"\").map((char, i) => (\n        <Character\n          x={i * 30 + 20}\n          y={90}\n          text={char}\n          color={colors[i]}\n        ></Character>\n      ))}\n\n      {arrowStart !== undefined && arrowTarget !== undefined && (\n        <Arrow2\n          x1={arrowStart * 30 + 35}\n          x2={arrowTarget * 30 + 35}\n          y1={90}\n          y2={50}\n        ></Arrow2>\n      )}\n\n      {shortPhrases.map((props) => (\n        <ShortPhrase {...props}></ShortPhrase>\n      ))}\n\n      {copyingPhrases.map((props) => (\n        <CopyingPhrase {...props}></CopyingPhrase>\n      ))}\n    </svg>\n  );\n}\n","import { sum, take, zip } from \"lodash\";\nimport React from \"react\";\nimport { RelzVisualizationData } from \"./common\";\nimport {\n  CharacterColor,\n  ShortPhraseProps,\n  CopyingPhraseProps,\n  Arrow,\n  Character,\n  CopyingPhrase,\n  SharedDefinitions,\n  ShortPhrase,\n  Arrow2,\n} from \"./drawing\";\n\nexport interface RelzVisualizationProps {\n  data: RelzVisualizationData;\n  currentPhrase?: number;\n}\n\nexport function RelzVisualization(props: RelzVisualizationProps) {\n  const { data, currentPhrase } = props;\n  const { input, phrases, firstPassPhrases, metaSymbolPhrases } = data;\n  const finalStep = currentPhrase === data.stepsCount;\n\n  const colors: CharacterColor[] = new Array(input.length).fill(\"none\");\n  let arrowStart: number | undefined;\n  let arrowTarget: number | undefined;\n  if (currentPhrase !== undefined && currentPhrase < firstPassPhrases.length) {\n    const phrase = firstPassPhrases[currentPhrase];\n    if (phrase.type === \"copy\") {\n      for (let i = 0; i < phrase.l; i++) {\n        colors[phrase.p + i] = \"source\";\n      }\n      arrowTarget = phrase.p;\n    }\n    const phrasePos = sum(\n      take(firstPassPhrases, currentPhrase).map((p) => p.l)\n    );\n    arrowStart = phrasePos;\n    for (let i = 0; i < phrase.l; i++) {\n      colors[phrasePos + i] =\n        colors[phrasePos + i] === \"none\" ? \"target\" : \"source-target\";\n    }\n  }\n\n  const shortPhrases: ShortPhraseProps[] = [];\n  const copyingPhrases: CopyingPhraseProps[] = [];\n  if (currentPhrase !== undefined) {\n    let currentPos = 0;\n    take(firstPassPhrases, currentPhrase + 1).forEach((p) => {\n      if (p.type === \"literal\") {\n        shortPhrases.push({\n          x: currentPos * 30,\n          y: 90,\n          text: `(${String.fromCodePoint(p.symbol)},0)`,\n        });\n      } else if (p.l === 1) {\n        shortPhrases.push({\n          x: currentPos * 30,\n          y: 90,\n          text: `(${p.p},${p.l})`,\n        });\n      } else {\n        copyingPhrases.push({\n          x1: currentPos * 30 + 22,\n          x2: currentPos * 30 + p.l * 30 + 18,\n          y: 90,\n          ...p,\n        });\n      }\n      currentPos += p.l;\n    });\n  }\n\n  const mappingArrows: [number, number][] = [];\n  if (currentPhrase === firstPassPhrases.length) {\n    let currentPos = 0;\n    firstPassPhrases.forEach((p, i) => {\n      mappingArrows.push([currentPos * 30 + 35 + (p.l - 1) * 15, i * 30 + 35]);\n      currentPos += p.l;\n    });\n  }\n\n  // TODO: convert meta symbols to lower case characters?\n  const metaSymbols =\n    currentPhrase && currentPhrase >= firstPassPhrases.length\n      ? data.metaSymbols.map((s) => String(s))\n      : [];\n  const metaColors: CharacterColor[] = new Array(metaSymbols.length).fill(\n    \"none\"\n  );\n  let metaArrowStart: number | undefined;\n  let metaArrowTarget: number | undefined;\n  const currentMetaPhrase =\n    currentPhrase !== undefined && currentPhrase > firstPassPhrases.length\n      ? Math.min(\n          currentPhrase - firstPassPhrases.length - 1,\n          metaSymbolPhrases.length - 1\n        )\n      : undefined;\n  if (\n    currentPhrase !== undefined &&\n    currentMetaPhrase !== undefined &&\n    currentPhrase < firstPassPhrases.length + metaSymbolPhrases.length + 1\n  ) {\n    const phrase = metaSymbolPhrases[currentMetaPhrase];\n    if (phrase.type === \"copy\") {\n      for (let i = 0; i < phrase.l; i++) {\n        metaColors[phrase.p + i] = \"source\";\n      }\n      metaArrowTarget = phrase.p;\n    }\n    const phrasePos = sum(\n      take(metaSymbolPhrases, currentMetaPhrase).map((p) => p.l)\n    );\n    metaArrowStart = phrasePos;\n    for (let i = 0; i < phrase.l; i++) {\n      metaColors[phrasePos + i] =\n        metaColors[phrasePos + i] === \"none\" ? \"target\" : \"source-target\";\n    }\n  }\n\n  if (currentMetaPhrase !== undefined) {\n    let currentPos = 0;\n    take(metaSymbolPhrases, currentMetaPhrase + 1).forEach((p, i) => {\n      if (p.type === \"literal\") {\n        shortPhrases.push({\n          x: currentPos * 30,\n          y: 300,\n          text: `(${metaSymbols[i]},0)`,\n        });\n      } else if (p.l === 1) {\n        shortPhrases.push({\n          x: currentPos * 30,\n          y: 300,\n          text: `(${p.p},${p.l})`,\n        });\n      } else {\n        copyingPhrases.push({\n          x1: currentPos * 30 + 22,\n          x2: currentPos * 30 + p.l * 30 + 18,\n          y: 300,\n          ...p,\n        });\n      }\n      currentPos += p.l;\n    });\n  }\n\n  const backMappingArrows: [number, number][] = [];\n  if (currentPhrase !== undefined && currentPhrase === data.stepsCount) {\n    let currentPos = 0;\n    let currentMetaPos = 0;\n    zip(phrases, metaSymbolPhrases).forEach(([p, metaP], i) => {\n      if (p && metaP) {\n        if (p.type === \"literal\") {\n          shortPhrases.push({\n            x: currentPos * 30,\n            y: 145,\n            text: `(${String.fromCodePoint(p.symbol)},0)`,\n          });\n        } else if (p.l === 1) {\n          shortPhrases.push({\n            x: currentPos * 30,\n            y: 145,\n            text: `(${p.p},${p.l})`,\n          });\n        } else {\n          copyingPhrases.push({\n            x1: currentPos * 30 + 22,\n            x2: currentPos * 30 + p.l * 30 + 18,\n            y: 145,\n            ...p,\n          });\n        }\n\n        backMappingArrows.push([\n          currentMetaPos * 30 + 35 + (metaP.l - 1) * 15,\n          currentPos * 30 + 35 + +(p.l - 1) * 15,\n        ]);\n\n        currentPos += p.l;\n        currentMetaPos += metaP?.l;\n      }\n    });\n  }\n\n  return (\n    <svg height=\"500\" width=\"100%\">\n      <SharedDefinitions></SharedDefinitions>\n\n      {input.split(\"\").map((char, i) => (\n        <Character\n          key={i}\n          x={i * 30 + 20}\n          y={50}\n          text={char}\n          color={colors[i]}\n        ></Character>\n      ))}\n\n      {arrowStart !== undefined && arrowTarget !== undefined && (\n        <Arrow\n          x1={arrowStart * 30 + 35}\n          x2={arrowTarget * 30 + 35}\n          y={50}\n        ></Arrow>\n      )}\n\n      {shortPhrases.map((props, i) => (\n        <ShortPhrase key={i} {...props}></ShortPhrase>\n      ))}\n\n      {copyingPhrases.map((props, i) => (\n        <CopyingPhrase key={i} {...props}></CopyingPhrase>\n      ))}\n\n      {mappingArrows.map(([x1, x2], i) => (\n        <Arrow2 key={i} x1={x1} y1={130} x2={x2} y2={259} straight></Arrow2>\n      ))}\n\n      {metaSymbols.map((char, i) => (\n        <Character\n          key={i}\n          x={i * 30 + 20}\n          y={260}\n          text={char}\n          color={metaColors[i]}\n        ></Character>\n      ))}\n\n      {metaArrowStart !== undefined && metaArrowTarget !== undefined && (\n        <Arrow\n          x1={metaArrowStart * 30 + 35}\n          x2={metaArrowTarget * 30 + 35}\n          y={260}\n        ></Arrow>\n      )}\n\n      {finalStep && (\n        <line\n          x1=\"20\"\n          y1=\"132\"\n          x2={input.length * 30 + 20}\n          y2=\"132\"\n          stroke=\"black\"\n        />\n      )}\n      {finalStep && (\n        <line\n          x1=\"20\"\n          y1=\"135\"\n          x2={input.length * 30 + 20}\n          y2=\"135\"\n          stroke=\"black\"\n        />\n      )}\n\n      {backMappingArrows.map(([x1, x2]) => (\n        <Arrow2 x1={x1} y1={260} x2={x2} y2={220} straight></Arrow2>\n      ))}\n    </svg>\n  );\n}\n","import { drop, dropWhile, last, sum, take } from \"lodash\";\nimport React from \"react\";\nimport { RelzRecVisualizationData } from \"./common\";\nimport {\n  Arrow,\n  Arrow2,\n  ArrowProps,\n  ArrowProps2,\n  Character,\n  CharacterProps,\n  PhraseDisplay,\n  PhraseDisplayProps,\n  SharedDefinitions,\n} from \"./drawing\";\n\nexport interface RelzRecVisualizationProps {\n  data: RelzRecVisualizationData;\n  currentPhrase: number;\n}\n\nexport function RelzRecVisualization(props: RelzRecVisualizationProps) {\n  const { data, currentPhrase } = props;\n  const { passes, prefixLength } = data;\n  const lineDistance = 120;\n  const step = data.steps[Math.min(currentPhrase, data.steps.length - 1)];\n  console.log(step);\n\n  const passOffsets = passes.reduce(\n    (lengths: number[], pass) => {\n      const length =\n        (last(lengths) ?? 0) + sum(pass.prefixPhrases.map((p) => p.l));\n      return [...lengths, length];\n    },\n    [0]\n  );\n\n  const [\n    passesVisible,\n    phrasesVisible,\n    mappingsVisible,\n    currentBackMappingPass,\n  ] =\n    step.type === \"initial\"\n      ? [1, 0, 0, 0]\n      : step.type === \"compress\"\n      ? [step.pass + 1, step.phrase + 1, step.pass - 1]\n      : step.type === \"mapping\"\n      ? [step.pass + 2, 0, step.pass + 1]\n      : [passes.length, prefixLength, 0, step.pass, step.suffixPhrase];\n  const characters: CharacterProps[][] = take(passes, passesVisible).map(\n    ({ input }, i) =>\n      input.map((c, h) => ({\n        x: h * 30 + passOffsets[i] * 30 + 30,\n        y: i * lineDistance + 30,\n        text: i === 0 ? String.fromCodePoint(c) : String(c),\n        color: \"none\",\n      }))\n  );\n\n  const phraseDisplays: PhraseDisplayProps[] = [];\n  const mappingArrows: ArrowProps2[] = [];\n  let referenceArrow: ArrowProps | undefined = undefined;\n\n  if (step.type === \"compress\") {\n    const allPhrases = [\n      ...passes[step.pass].prefixPhrases,\n      ...passes[step.pass].suffixPhrases,\n    ];\n    const phrase = allPhrases[step.phrase];\n    if (phrase.type === \"copy\") {\n      referenceArrow = {\n        x1: phrase.pos * 30 + passOffsets[step.pass] * 30 + 45,\n        x2: phrase.p * 30 + passOffsets[step.pass] * 30 + 45,\n        y: step.pass * lineDistance + 30,\n      };\n      for (let i = 0; i < phrase.l; i++) {\n        characters[step.pass][phrase.pos + i].color = \"target\";\n        if (characters[step.pass][phrase.p + i].color === \"target\") {\n          characters[step.pass][phrase.p + i].color = \"source-target\";\n        } else {\n          characters[step.pass][phrase.p + i].color = \"source\";\n        }\n      }\n    } else {\n      characters[step.pass][phrase.pos].color = \"target\";\n    }\n  }\n\n  if (step.type === \"back-mapping\") {\n    const phrase = passes[step.pass].suffixPhrasesCompressed[step.suffixPhrase];\n    drop(passes, currentBackMappingPass).forEach((pass, i) => {\n      const passIdx = i + step.pass;\n      take(\n        pass.suffixPhrasesCompressed,\n        passIdx === step.pass\n          ? step.suffixPhrase + 1\n          : passes[passIdx].suffixPhrasesCompressed.length\n      ).forEach((p, pi) => {\n        const pos = p.pos;\n        if (p.type === \"literal\") {\n          const text = `(${\n            passIdx === 0 ? String.fromCodePoint(p.symbol) : String(p.symbol)\n          },0)`;\n          phraseDisplays.push({\n            x: pos * 30 + passOffsets[passIdx] * 30 + 30,\n            y: 65 + lineDistance * passIdx,\n            l: 1,\n            text,\n          });\n        } else {\n          const text = `(${p.p},${p.l})`;\n          phraseDisplays.push({\n            x: pos * 30 + passOffsets[passIdx] * 30 + 30,\n            y: 65 + lineDistance * passIdx,\n            l: p.l,\n            text,\n          });\n        }\n\n        const metaPhrase = passes[passIdx + 1].phrasesCompressed[pi];\n        mappingArrows.push({\n          x1:\n            metaPhrase.pos * 30 +\n            30 +\n            metaPhrase.l * 15 +\n            passOffsets[passIdx + 1] * 30,\n          y1: 150 + passIdx * lineDistance,\n          x2: p.pos * 30 + 30 + p.l * 15 + passOffsets[passIdx] * 30,\n          y2: 140 + passIdx * lineDistance,\n          straight: true,\n        });\n      });\n      dropWhile(\n        pass.suffixPhrases,\n        (p) => passIdx !== step.pass || p.pos < phrase.pos + phrase.l\n      ).forEach((p) => {\n        const pos = p.pos;\n        if (p.type === \"literal\") {\n          const text = `(${\n            passIdx === 0 ? String.fromCodePoint(p.symbol) : String(p.symbol)\n          },0)`;\n          phraseDisplays.push({\n            x: pos * 30 + passOffsets[passIdx] * 30 + 30,\n            y: 65 + lineDistance * passIdx,\n            l: 1,\n            text,\n          });\n        } else {\n          const text = `(${p.p},${p.l})`;\n          phraseDisplays.push({\n            x: pos * 30 + passOffsets[passIdx] * 30 + 30,\n            y: 65 + lineDistance * passIdx,\n            l: p.l,\n            text,\n          });\n        }\n      });\n    });\n  }\n\n  take(passes, passesVisible).forEach((pass, i) => {\n    take(\n      pass.prefixPhrases,\n      i === passesVisible - 1 ? phrasesVisible : pass.prefixPhrases.length\n    ).forEach((p) => {\n      const { pos } = p;\n      if (p.type === \"literal\") {\n        const text = `(${\n          i === 0 ? String.fromCodePoint(p.symbol) : String(p.symbol)\n        },0)`;\n        phraseDisplays.push({\n          x: pos * 30 + passOffsets[i] * 30 + 30,\n          y: 65 + lineDistance * i,\n          l: 1,\n          text,\n        });\n      } else {\n        const text = `(${p.p},${p.l})`;\n        phraseDisplays.push({\n          x: pos * 30 + passOffsets[i] * 30 + 30,\n          y: 65 + lineDistance * i,\n          l: p.l,\n          text,\n        });\n      }\n    });\n    take(\n      pass.suffixPhrases,\n      i === passesVisible - 1\n        ? phrasesVisible - pass.prefixPhrases.length\n        : currentBackMappingPass !== undefined && i >= currentBackMappingPass\n        ? 0\n        : pass.suffixPhrases.length\n    ).forEach((p) => {\n      const pos = p.pos;\n      if (p.type === \"literal\") {\n        const text = `(${\n          i === 0 ? String.fromCodePoint(p.symbol) : String(p.symbol)\n        },0)`;\n        phraseDisplays.push({\n          x: pos * 30 + passOffsets[i] * 30 + 30,\n          y: 65 + lineDistance * i,\n          l: 1,\n          text,\n        });\n      } else {\n        const text = `(${p.p},${p.l})`;\n        phraseDisplays.push({\n          x: pos * 30 + passOffsets[i] * 30 + 30,\n          y: 65 + lineDistance * i,\n          l: p.l,\n          text,\n        });\n      }\n    });\n  });\n\n  take(passes, mappingsVisible).forEach((pass, i) =>\n    pass.suffixPhrases.forEach((p, pi) => {\n      mappingArrows.push({\n        x1: p.pos * 30 + 30 + p.l * 15 + passOffsets[i] * 30,\n        y1: 100 + i * lineDistance,\n        x2: pi * 30 + passOffsets[i + 1] * 30 + 45,\n        y2: 150 + i * lineDistance,\n        straight: true,\n      });\n    })\n  );\n\n  return (\n    <svg height={passes.length * lineDistance} width={data.input.length * 30 + 60}>\n      <SharedDefinitions></SharedDefinitions>\n\n      {characters.map((passCharacters, i) =>\n        passCharacters.map((props, h) => (\n          <Character key={`${i}+${h}`} {...props}></Character>\n        ))\n      )}\n\n      {phraseDisplays.map((props, i) => (\n        <PhraseDisplay key={i} {...props}></PhraseDisplay>\n      ))}\n\n      {mappingArrows.map((props, i) => (\n        <Arrow2 key={i} {...props}></Arrow2>\n      ))}\n\n      {referenceArrow && <Arrow {...referenceArrow}></Arrow>}\n    </svg>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport FormControl from \"react-bootstrap/esm/FormControl\";\nimport InputGroup from \"react-bootstrap/esm/InputGroup\";\nimport {\n  availableCompressors,\n  CompressorType,\n} from \"../compression/compressors\";\nimport { Settings } from \"../visualization/common\";\n\ninterface EmbedUrlProps {\n  type: CompressorType;\n  input: string;\n  settings: Settings;\n  step: number;\n}\n\nexport function EmbedUrl(props: EmbedUrlProps) {\n  const { type, input, settings, step } = props;\n\n  const [includeStep, setIncludeStep] = useState(true);\n  const [embedVisualization, setEmbedVisualization] = useState(false);\n\n  const currentQuery = new URLSearchParams();\n  currentQuery.set(\"type\", type);\n  currentQuery.set(\"input\", input);\n  if (availableCompressors[type].needsPrefixSize) {\n    currentQuery.set(\"prefix\", String(settings.prefixSize));\n  }\n  if (availableCompressors[type].needsWindowSize) {\n    currentQuery.set(\"window\", String(settings.windowSize));\n  }\n  if (availableCompressors[type].needsRecursionLimit) {\n    currentQuery.set(\"recursion\", String(settings.recursionLimit));\n  }\n  if (availableCompressors[type].needsReference) {\n    currentQuery.set(\"reference\", settings.reference);\n  }\n  if (includeStep) {\n    currentQuery.set(\"step\", String(step));\n  }\n\n  const pathname = embedVisualization ? \"/embed\" : \"/steps\";\n  const url = `${window.location.origin}${\n    window.location.pathname\n  }/#${pathname}?${currentQuery.toString()}`;\n\n  return (\n    <Card>\n      <Card.Body>\n        <Form>\n          <InputGroup className=\"mb-3\">\n            <FormControl value={url} readOnly />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-secondary\"\n                onClick={() => navigator.clipboard.writeText(url)}\n              >\n                Copy\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n          <Form.Check\n            custom\n            type=\"checkbox\"\n            label=\"Include current step\"\n            id=\"includeStep\"\n            onChange={(e) => setIncludeStep(e.target.checked)}\n            checked={includeStep}\n          />\n          <Form.Check\n            custom\n            type=\"checkbox\"\n            label=\"Embed visualization\"\n            id=\"embed\"\n            onChange={(e) => setEmbedVisualization(e.target.checked)}\n            checked={embedVisualization}\n          />\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n","import {\n  faFastBackward,\n  faBackward,\n  faForward,\n  faFastForward,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from \"react-bootstrap/esm/Row\";\n\ninterface StepControlsProps {\n  step: number;\n  stepsTotal: number;\n  stepChanged?: (step: number) => void;\n}\n\nexport function StepControls(props: StepControlsProps) {\n  const { step, stepsTotal, stepChanged } = props;\n  function updateStep(newStep: number) {\n    if (stepChanged) {\n      stepChanged(Math.max(0, Math.min(stepsTotal - 1, newStep)));\n    }\n  }\n  return (\n    <Container fluid>\n      <Row className=\"no-gutters\">\n        <Col>\n          <Button\n            style={{ width: \"100%\" }}\n            disabled={step === 0}\n            onClick={() => updateStep(0)}\n          >\n            <FontAwesomeIcon icon={faFastBackward} /> First\n          </Button>\n        </Col>\n        <Col className=\"ml-2\">\n          <Button\n            style={{ width: \"100%\" }}\n            disabled={step === 0}\n            onClick={() => updateStep(step - 1)}\n          >\n            <FontAwesomeIcon icon={faBackward} /> Previous\n          </Button>\n        </Col>\n        <Col className=\"text-center my-auto\">\n          <h5>{`${step + 1} / ${stepsTotal}`}</h5>\n        </Col>\n        <Col className=\"ml-2\">\n          <Button\n            style={{ width: \"100%\" }}\n            disabled={step >= stepsTotal - 1}\n            onClick={() => updateStep(step + 1)}\n          >\n            Next <FontAwesomeIcon icon={faForward} />\n          </Button>\n        </Col>\n\n        <Col className=\"ml-2\">\n          <Button\n            style={{ width: \"100%\" }}\n            disabled={step >= stepsTotal - 1}\n            onClick={() => updateStep(stepsTotal - 1)}\n          >\n            Last <FontAwesomeIcon icon={faFastForward} />\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport {\n  availableCompressors,\n  CompressorType,\n} from \"../compression/compressors\";\nimport { values } from \"lodash\";\nimport { Lz77Visualization } from \"../visualization/Lz77Visualization\";\nimport { computeData } from \"../visualization/common\";\nimport { RlzVisualization } from \"../visualization/RlzVisualization\";\nimport { RelzVisualization } from \"../visualization/RelzVisualization\";\nimport { RelzRecVisualization } from \"../visualization/RelzRecVisualization\";\nimport { EmbedUrl } from \"../components/EmbedUrl\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport { StepControls } from \"../components/StepControls\";\n\nexport default function StepByStep() {\n  const [input, setInput] = useState(\"ABCCDBCCABDD\");\n\n  const [currentStep, setCurrentStep] = useState<number>(0);\n\n  const [selectedCompressor, setSelectedCompressor] = useState<CompressorType>(\n    \"lz77\"\n  );\n  const currentCompressor = availableCompressors[selectedCompressor];\n  const [referenceString, setReferenceString] = useState(\"\");\n  const [windowSize, setWindowSize] = useState(5);\n  const [prefixSize, setPrefixSize] = useState(5);\n  const [recursionLimit, setRecursionLimit] = useState(5);\n\n  const data = computeData(selectedCompressor, input, {\n    reference: referenceString,\n    windowSize,\n    prefixSize,\n    recursionLimit,\n  });\n  useEffect(() => {\n    setCurrentStep(Math.min(data.stepsCount - 1, currentStep));\n  }, [data, data.stepsCount, currentStep]);\n\n  return (\n    <>\n      <Container>\n        <Row className=\"mt-5\">\n          <Col>\n            <Card>\n              <Card.Header>Settings</Card.Header>\n              <Card.Body>\n                <Form>\n                  <Form.Group>\n                    <Form.Label>Input String</Form.Label>\n                    <Form.Control\n                      value={input}\n                      onChange={(e) => setInput(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Row>\n                    <Col>\n                      <Form.Group>\n                        <Form.Label>Compression Algorithm</Form.Label>\n                        {values(availableCompressors).map((c) => (\n                          <Form.Check\n                            key={c.type}\n                            label={c.title}\n                            name=\"compressor-group\"\n                            type=\"radio\"\n                            checked={selectedCompressor === c.type}\n                            onChange={() => setSelectedCompressor(c.type)}\n                          />\n                        ))}\n                      </Form.Group>\n                    </Col>\n                    <Col>\n                      {currentCompressor.needsReference && (\n                        <Form.Group key=\"reference-string\">\n                          <Form.Label>Reference</Form.Label>\n                          <Form.Control\n                            placeholder=\"Reference String\"\n                            value={referenceString}\n                            onChange={(e) => setReferenceString(e.target.value)}\n                          />\n                        </Form.Group>\n                      )}\n                      {currentCompressor.needsPrefixSize && (\n                        <Form.Group>\n                          <Form.Label>Prefix Size</Form.Label>\n                          <Form.Control\n                            type=\"number\"\n                            value={prefixSize}\n                            onChange={(e) =>\n                              setPrefixSize(parseInt(e.target.value))\n                            }\n                          />\n                        </Form.Group>\n                      )}\n                      {currentCompressor.needsWindowSize && (\n                        <Form.Group>\n                          <Form.Label>Window Size</Form.Label>\n                          <Form.Control\n                            type=\"number\"\n                            value={windowSize}\n                            onChange={(e) =>\n                              setWindowSize(parseInt(e.target.value))\n                            }\n                          />\n                        </Form.Group>\n                      )}\n                      {currentCompressor.needsRecursionLimit && (\n                        <Form.Group>\n                          <Form.Label>Recursion Limit</Form.Label>\n                          <Form.Control\n                            type=\"number\"\n                            value={recursionLimit}\n                            onChange={(e) =>\n                              setRecursionLimit(parseInt(e.target.value))\n                            }\n                          />\n                        </Form.Group>\n                      )}\n                    </Col>\n                  </Form.Row>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col>\n            <Card>\n              <Card.Body >\n                <Container>\n                  <Row className=\"justify-content-center overflow-auto\">\n                    <Col  xs=\"auto\">\n                      {data?.type === \"lz77\" && (\n                        <Lz77Visualization\n                          data={data}\n                          currentPhrase={currentStep}\n                        ></Lz77Visualization>\n                      )}\n                      {data?.type === \"rlz\" && (\n                        <RlzVisualization\n                          data={data}\n                          currentPhrase={currentStep}\n                        ></RlzVisualization>\n                      )}\n                      {data?.type === \"relz\" && (\n                        <RelzVisualization\n                          data={data}\n                          currentPhrase={currentStep}\n                        ></RelzVisualization>\n                      )}\n                      {data?.type === \"relz-rec\" && (\n                        <RelzRecVisualization\n                          data={data}\n                          currentPhrase={currentStep}\n                        ></RelzRecVisualization>\n                      )}\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-center\">\n                    <Col lg=\"8\">\n                      <StepControls\n                        step={currentStep}\n                        stepsTotal={data.stepsCount}\n                        stepChanged={setCurrentStep}\n                      ></StepControls>\n                    </Col>\n                  </Row>\n                </Container>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"mt-3 mb-5\">\n          <Col>\n            <EmbedUrl\n              type={selectedCompressor}\n              input={input}\n              settings={{\n                prefixSize,\n                recursionLimit,\n                reference: referenceString,\n                windowSize,\n              }}\n              step={currentStep}\n            ></EmbedUrl>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Nav from \"react-bootstrap/esm/Nav\";\nimport Navbar from \"react-bootstrap/esm/Navbar\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n  faBalanceScaleRight,\n  faQuestion,\n  faStepForward,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport function AppNavbar() {\n  const location = useLocation();\n  const links = [\n    { to: \"/compare\", title: \"Compare\", icon: faBalanceScaleRight },\n    { to: \"/steps\", title: \"Step by Step\", icon: faStepForward },\n    { to: \"/quiz\", title: \"Quiz\", icon: faQuestion },\n  ];\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand to=\"/\" as={Link}>\n          Lempel-Ziv Playground\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {links.map(({ to, title, icon }) => (\n              <Nav.Link\n                key={to}\n                to={to}\n                as={Link}\n                active={location.pathname === to}\n              >\n                <FontAwesomeIcon icon={icon} /> {title}\n              </Nav.Link>\n            ))}\n          </Nav>\n          <Nav className=\"justify-content-end\">\n            <Nav.Link\n              href={\"https://github.com/jannikw/lempel-ziv\"}\n              target=\"_blank\"\n            >\n              <FontAwesomeIcon icon={faGithub} /> Source Code\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import { keys } from \"lodash\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  availableCompressors,\n  CompressorType,\n} from \"./compression/compressors\";\nimport { Settings } from \"./visualization/common\";\n\nexport function useQuery() {\n  const location = useLocation();\n  return new URLSearchParams(location.search);\n}\n\nexport function useEmbedState(): boolean {\n  const location = useLocation();\n  const query = useQuery();\n  return query.has(\"embed\") || location.pathname === \"/embed\";\n}\n\nexport function useSettingsFromQuery(): {\n  type: CompressorType;\n  input: string;\n  step: number;\n  settings: Settings;\n} {\n  const query = useQuery();\n  const type = query.get(\"type\");\n  const input = query.get(\"input\") ?? \"\";\n  const step = parseInt(query.get(\"step\") ?? \"0\");\n  const windowSize = query.get(\"window\");\n  const prefix = query.get(\"prefix\");\n  const recursion = query.get(\"recursion\");\n  const reference = query.get(\"reference\");\n  const settings: Settings = {\n    windowSize: windowSize === null ? 5 : parseInt(windowSize),\n    prefixSize: prefix === null ? 5 : parseInt(prefix),\n    recursionLimit: recursion === null ? 5 : parseInt(recursion),\n    reference: reference === null ? \"\" : reference,\n  };\n\n  if (type !== null && keys(availableCompressors).includes(type)) {\n    return { type: type as CompressorType, input, step, settings };\n  } else {\n    return { type: \"lz77\", input, step, settings };\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport { StepControls } from \"../components/StepControls\";\nimport { useSettingsFromQuery } from \"../hooks\";\nimport { computeData } from \"../visualization/common\";\nimport { Lz77Visualization } from \"../visualization/Lz77Visualization\";\nimport { RelzRecVisualization } from \"../visualization/RelzRecVisualization\";\nimport { RelzVisualization } from \"../visualization/RelzVisualization\";\nimport { RlzVisualization } from \"../visualization/RlzVisualization\";\n\nexport function Embed() {\n  const { type, input, step: initialStep, settings } = useSettingsFromQuery();\n  const data = computeData(type, input, settings);\n  const [step, setStep] = useState(0);\n\n  useEffect(() => {\n    setStep(initialStep);\n  }, [initialStep]);\n\n  return (\n    <Container fluid className=\"h-100\">\n      <Row className=\"justify-content-center overflow-auto\">\n        <Col xs=\"auto\">\n          {data?.type === \"lz77\" && (\n            <Lz77Visualization\n              data={data}\n              currentPhrase={step}\n            ></Lz77Visualization>\n          )}\n          {data?.type === \"rlz\" && (\n            <RlzVisualization\n              data={data}\n              currentPhrase={step}\n            ></RlzVisualization>\n          )}\n          {data.type === \"relz\" && (\n            <RelzVisualization\n              data={data}\n              currentPhrase={step}\n            ></RelzVisualization>\n          )}\n          {data.type === \"relz-rec\" && (\n            <RelzRecVisualization\n              data={data}\n              currentPhrase={step}\n            ></RelzRecVisualization>\n          )}\n        </Col>\n      </Row>\n      <Row className=\"mb-3 justify-content-center\" style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}>\n        <Col lg=\"8\" md=\"12\">\n          <StepControls\n            step={step}\n            stepsTotal={data.stepsCount}\n            stepChanged={setStep}\n          ></StepControls>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\n\nexport function Quiz() {\n  return <Container></Container>;\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\nimport { Link } from \"react-router-dom\";\n\nexport function Home() {\n  return (\n    <Container className=\"mt-5\">\n      <Jumbotron>\n        <h1>Lempel-Ziv Playground</h1>\n        <p>\n          This page lets you play around with the original Lempel-Ziv algorithm\n          from 1977 and other variants of the algorithm. You can compare\n          different Lempel-Ziv variants with each other{\" \"}\n          <Link to=\"/compare\">here</Link> and find out what parameters work well\n          on different inputs. You can go through the compression process step\n          by step for each algorithm and see how an input is processed{\" \"}\n          <Link to=\"/slides\">here</Link>. Finally, you can take a quiz on the\n          algorithms and think about some properties of the algorithms{\" \"}\n          <Link to=\"/quiz\">here</Link>.\n        </p>\n      </Jumbotron>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Compare } from \"./pages/Compare\";\nimport StepByStep from \"./pages/StepByStep\";\nimport { AppNavbar } from \"./components/AppNavbar\";\nimport { useEmbedState } from \"./hooks\";\nimport { Embed } from \"./pages/Embed\";\nimport { Quiz } from \"./pages/Quiz\";\nimport { Home } from \"./pages/Home\";\n\nfunction App() {\n  const embedded = useEmbedState();\n\n  return (\n    <>\n      {!embedded && <AppNavbar></AppNavbar>}\n      <Switch>\n        <Route exact path=\"/\">\n          <Home></Home>\n        </Route>\n        <Route exact path=\"/compare\">\n          <Compare></Compare>\n        </Route>\n        <Route exact path=\"/steps\">\n          <StepByStep></StepByStep>\n        </Route>\n        <Route exact path=\"/quiz\">\n          <Quiz></Quiz>\n        </Route>\n        <Route exact path=\"/embed\">\n          <Embed></Embed>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}