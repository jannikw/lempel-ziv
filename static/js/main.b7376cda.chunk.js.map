{"version":3,"sources":["compression/compressors.tsx","components/CompressorSettingsEditor.tsx","compression/utils.ts","compression/algorithms.ts","visualization/common.ts","visualization/drawing.tsx","visualization/PhrasesVisualization.tsx","components/CompressorOutput.tsx","hooks.ts","pages/Compare.tsx","visualization/LzLikeVisualization.tsx","visualization/RlzVisualization.tsx","visualization/RelzVisualization.tsx","visualization/RelzRecVisualization.tsx","components/EmbedUrl.tsx","components/StepControls.tsx","pages/StepByStep.tsx","components/AppNavbar.tsx","pages/Embed.tsx","components/Task.tsx","pages/Quiz.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["availableCompressors","lz77","type","title","needsReference","needsPrefixSize","needsWindowSize","needsRecursionLimit","rlz","relz","CompressorSettingEditor","props","settings","update","onChange","compressor","Card","className","Header","Row","Col","Button","variant","size","onClick","remove","icon","faTrashAlt","Body","Form","Group","as","Label","column","xs","Control","value","windowSize","min","e","parseInt","target","prefixSize","recursionLimit","reference","indexOfSubArray","array","subarray","outer","i","length","h","lastIndexOfSubArray","stringToCodePoints","input","result","codePoint","codePointAt","push","compressLz77","compressWithSlidingWindow","compressRlz","pos","phraseLength","lastOccurrence","currentPhrase","slice","currentOccurrence","symbol","l","p","windowStart","Math","max","compressRlzPrefix","prefixLength","prefixPhrases","suffixPhrases","phrase","relzMapping","symbolToPhraseMapping","Map","contentToSymbolMapping","mappedInput","getMapping","currentContent","content","isEqual","newMetaSymbol","set","extractLzLikeParsing","phrases","mapping","positionOffset","sum","map","mappedPhrase","get","undefined","Error","mappedPos","sumBy","c","mappedLength","compressRelzRecursive","passes","metaSymbols","metaSymbolsPhrases","suffixPhrasesCompressed","suffixMetaSymbols","suffixMetaSymbolsPhrases","phrasesCompressed","computeData","codePoints","steps","range","referenceCodePoints","firstPassPhrases","metaSymbolPhrases","compressRelz","lastPass","flatMap","pass","reverse","take","suffixPhrase","TARGET_COLOR","SOURCE_COLOR","SharedDefinitions","id","markerWidth","markerHeight","refX","refY","orient","points","gradientTransform","offset","stopColor","Arrow","x1","x2","y","d","markerEnd","stroke","fill","Arrow2","y1","y2","straight","v1","v2","Character","x","text","color","w","width","height","onMouseEnter","onMouseLeave","style","overflowY","textAlign","verticalAlign","lineHeight","userSelect","CurlyBrace","q","dx","dy","len","sqrt","qx1","qy1","qx2","qy2","tx1","ty1","qx3","qy3","qx4","qy4","path","PhraseDisplay","transform","abs","PhrasesVisualization","data","useState","highlightedPhraseIdx","setHighlightedPhraseIdx","highlightedPhrase","characters","split","referenceArrow","forEach","String","fromCodePoint","CompressorOutput","toFixed","useQuery","location","useLocation","useMemo","URLSearchParams","search","useEmbedState","has","pathname","useSettingsFromQuery","query","step","prefix","recursion","keys","includes","Compare","setInput","compressorType","setCompressorType","isEmebed","queryInput","useEffect","compressorSettings","setCompressorSettings","Container","fluid","FormControl","placeholder","lg","md","Dropdown","ButtonGroup","Toggle","Menu","entries","Item","idx","newSettings","filter","v","LzLikeVisualization","currentStep","phraseCount","RlzVisualization","refCharacters","RelzVisualization","console","log","mappingArrows","phrasesVisible","metaPhrasesVisible","compressedPhrasesVisible","metaPhrase","RelzRecVisualization","lineDistance","passOffsets","reduce","lengths","last","passesVisible","mappingsVisible","currentBackMappingPass","phraseDisplays","drop","passIdx","pi","dropWhile","passCharacters","EmbedUrl","includeStep","setIncludeStep","embedVisualization","setEmbedVisualization","currentQuery","url","window","origin","toString","InputGroup","readOnly","Append","navigator","clipboard","writeText","Check","custom","label","checked","StepControls","stepsTotal","stepChanged","updateStep","newStep","disabled","faFastBackward","faBackward","faForward","faFastForward","StepByStep","setCurrentStep","selectedCompressor","setSelectedCompressor","currentCompressor","referenceString","setReferenceString","setWindowSize","setPrefixSize","setRecursionLimit","isEmbeded","values","name","AppNavbar","links","to","faBalanceScaleRight","faStepForward","faQuestion","Navbar","collapseOnSelect","expand","bg","Brand","Link","Collapse","Nav","active","href","faGithub","Embed","initialStep","setStep","position","bottom","validateTaskInputs","description","inputs","validate","getInitialState","currentInputs","initialValue","done","Task","number","state","onStateChanged","invalidValues","updateInput","inputIdx","newInputs","some","check","checkTask","faCheckCircle","faExclamationCircle","isInvalid","render","tasks","lz77Data","relzData","rlzPrefData","Quiz","states","setStates","finishedTaskCount","s","allTasksDone","faTasks","faCheckDouble","task","taskIdx","updateState","Home","Jumbotron","App","embedded","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7376cda.chunk.js","sourcesContent":["export type CompressorType =\n  | \"lz77\"\n  | \"lz-sw\"\n  | \"rlz\"\n  | \"rlz-pref\"\n  | \"relz\"\n  | \"relz-rec\";\n\nexport type CompressorSettings =\n  | {\n      type: \"lz77\";\n    }\n  | {\n      type: \"lz-sw\";\n      windowSize?: number;\n    }\n  | {\n      type: \"rlz\";\n      reference: string;\n    }\n  | {\n      type: \"rlz-pref\";\n      prefixLength: number;\n    }\n  | {\n      type: \"relz\";\n      prefixLength: number;\n    }\n  | {\n      type: \"relz-rec\";\n      prefixLength: number;\n      recursionLimit?: number;\n    };\n\nexport function initialCompressorSettings(\n  type: CompressorType\n): CompressorSettings {\n  if (type === \"lz77\") {\n    return { type: \"lz77\" };\n  } else if (type === \"lz-sw\") {\n    return { type: \"lz-sw\", windowSize: 5 };\n  } else if (type === \"rlz\") {\n    return { type: \"rlz\", reference: \"\" };\n  } else if (type === \"rlz-pref\") {\n    return { type: \"rlz-pref\", prefixLength: 5 };\n  } else if (type === \"relz\") {\n    return { type: \"relz\", prefixLength: 5 };\n  } /* else if (type === \"relz-rec\") */ else {\n    return { type: \"relz-rec\", prefixLength: 5 };\n  }\n}\n\nexport interface Compressor {\n  type: CompressorType;\n  title: string;\n  needsReference: boolean;\n  needsPrefixSize: boolean;\n  needsWindowSize: boolean;\n  needsRecursionLimit: boolean;\n}\n\nexport const availableCompressors: { [type in CompressorType]: Compressor } = {\n  lz77: {\n    type: \"lz77\",\n    title: \"LZ77\",\n    needsReference: false,\n    needsPrefixSize: false,\n    needsWindowSize: false,\n    needsRecursionLimit: false,\n  },\n  \"lz-sw\": {\n    type: \"lz-sw\",\n    title: \"LZ with sliding window\",\n    needsReference: false,\n    needsPrefixSize: false,\n    needsWindowSize: true,\n    needsRecursionLimit: false,\n  },\n  rlz: {\n    type: \"rlz\",\n    title: \"RLZ\",\n    needsReference: true,\n    needsPrefixSize: false,\n    needsWindowSize: false,\n    needsRecursionLimit: false,\n  },\n  \"rlz-pref\": {\n    type: \"rlz-pref\",\n    title: \"RLZ using prefix\",\n    needsReference: false,\n    needsPrefixSize: true,\n    needsWindowSize: false,\n    needsRecursionLimit: false,\n  },\n  relz: {\n    type: \"relz\",\n    title: \"ReLZ\",\n    needsReference: false,\n    needsPrefixSize: true,\n    needsWindowSize: false,\n    needsRecursionLimit: false,\n  },\n  \"relz-rec\": {\n    type: \"relz-rec\",\n    title: \"Recursive ReLZ\",\n    needsReference: false,\n    needsPrefixSize: true,\n    needsWindowSize: false,\n    needsRecursionLimit: true,\n  },\n};\n","import { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport {\n  availableCompressors,\n  CompressorType,\n} from \"../compression/compressors\";\nimport { Settings } from \"../visualization/common\";\n\ninterface CompressorSettingsEditorProps {\n  type: CompressorType;\n  settings: Settings;\n  onChange?: (settings: Settings) => void;\n  remove?: () => void;\n}\n\nexport function CompressorSettingEditor(\n  props: CompressorSettingsEditorProps\n): JSX.Element {\n  const { type, settings } = props;\n\n  function update(settings: Settings) {\n    if (props.onChange) {\n      props.onChange(settings);\n    }\n  }\n\n  const compressor = availableCompressors[type];\n\n  return (\n    <Card className=\"h-100\">\n      <Card.Header>\n        <Row className=\"d-flex align-items-center\">\n          <Col>\n            <h6>{compressor.title}</h6>\n          </Col>\n          <Col>\n            <Button\n              variant=\"outline-danger\"\n              className=\"float-right\"\n              size=\"sm\"\n              onClick={() => props.remove && props.remove()}\n            >\n              Remove <FontAwesomeIcon icon={faTrashAlt} />\n            </Button>\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body>\n        {type === \"lz77\" && \"no settings\"}\n        <Form>\n          {compressor.needsWindowSize && (\n            <Form.Group as={Row}>\n              <Form.Label column xs=\"4\">\n                Window Size\n              </Form.Label>\n              <Col xs=\"8\">\n                <Form.Control\n                  type=\"number\"\n                  value={settings.windowSize}\n                  min={0}\n                  onChange={(e) =>\n                    update({\n                      ...settings,\n                      windowSize: parseInt(e.target.value),\n                    })\n                  }\n                />\n              </Col>\n            </Form.Group>\n          )}\n          {compressor.needsPrefixSize && (\n            <Form.Group as={Row}>\n              <Form.Label column xs=\"4\">\n                Prefix Length\n              </Form.Label>\n              <Col xs=\"8\">\n                <Form.Control\n                  type=\"number\"\n                  value={settings.prefixSize}\n                  min={0}\n                  onChange={(e) =>\n                    update({\n                      ...settings,\n                      prefixSize: parseInt(e.target.value),\n                    })\n                  }\n                />\n              </Col>\n            </Form.Group>\n          )}\n          {compressor.needsRecursionLimit && (\n            <Form.Group as={Row}>\n              <Form.Label column xs=\"4\">\n                Recursion Limit\n              </Form.Label>\n              <Col xs=\"8\">\n                <Form.Control\n                  type=\"number\"\n                  value={settings.recursionLimit}\n                  min={0}\n                  onChange={(e) =>\n                    update({\n                      ...settings,\n                      recursionLimit: parseInt(e.target.value),\n                    })\n                  }\n                />\n              </Col>\n            </Form.Group>\n          )}\n          {compressor.needsReference && (\n            <Form.Group as={Row}>\n              <Form.Label column xs=\"4\">\n                Reference String\n              </Form.Label>\n              <Col xs=\"8\">\n                <Form.Control\n                  type=\"text\"\n                  value={settings.reference}\n                  onChange={(e) =>\n                    update({\n                      ...settings,\n                      reference: e.target.value,\n                    })\n                  }\n                />\n              </Col>\n            </Form.Group>\n          )}\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n","export function indexOfSubArray<T>(array: T[], subarray: T[]): number {\n  outer: for (let i = 0; i <= array.length - subarray.length; i++) {\n    for (let h = 0; h < subarray.length; h++) {\n      if (array[i + h] !== subarray[h]) {\n        continue outer;\n      }\n    }\n    return i;\n  }\n\n  return -1;\n}\n\nexport function lastIndexOfSubArray<T>(array: T[], subarray: T[]): number {\n  outer: for (let i = array.length - subarray.length; i >= 0; i--) {\n    for (let h = 0; h < subarray.length; h++) {\n      if (array[i + h] !== subarray[h]) {\n        continue outer;\n      }\n    }\n    return i;\n  }\n\n  return -1;\n}\n\nexport function stringToCodePoints(input: string): number[] {\n  const result = [];\n\n  for (var i = 0; i < input.length; i++) {\n    var codePoint = input.codePointAt(i);\n\n    if (!codePoint) {\n      break;\n    }\n\n    result.push(codePoint);\n  }\n\n  return result;\n}\n\nexport function codePointsToString(...codePoints: number[]): string {\n  return String.fromCodePoint(...codePoints);\n}\n","import { indexOfSubArray, lastIndexOfSubArray } from \"./utils\";\nimport { isEqual, sum, sumBy } from \"lodash\";\n\nexport type Phrase =\n  | {\n      type: \"literal\";\n      symbol: number;\n      pos: number;\n      l: 1;\n    }\n  | {\n      type: \"copy\";\n      pos: number;\n      p: number;\n      l: number;\n    };\n\nexport type RlzPhrase = { rlz: true } & (\n  | {\n      type: \"literal\";\n      symbol: number;\n      pos: number;\n      l: 1;\n    }\n  | {\n      type: \"copy\";\n      pos: number;\n      p: number;\n      l: number;\n    }\n);\n\nexport function* compressLz77(input: number[]): Generator<Phrase> {\n  let pos = 0;\n  while (pos < input.length) {\n    let phraseLength = 0;\n    let lastOccurrence = 0;\n    while (pos + phraseLength < input.length) {\n      let currentPhrase = input.slice(pos, pos + phraseLength + 1);\n      let currentOccurrence = lastIndexOfSubArray(\n        input.slice(0, pos + phraseLength),\n        currentPhrase\n      );\n      if (currentOccurrence !== -1) {\n        phraseLength++;\n        lastOccurrence = currentOccurrence;\n      } else {\n        break;\n      }\n    }\n\n    if (phraseLength === 0) {\n      yield { type: \"literal\", pos, symbol: input[pos], l: 1 };\n      pos += 1;\n    } else {\n      yield { type: \"copy\", pos, p: lastOccurrence, l: phraseLength };\n      pos += phraseLength;\n    }\n  }\n}\n\nexport function* compressWithSlidingWindow(\n  input: number[],\n  windowSize: number\n): Generator<Phrase> {\n  let pos = 0;\n  while (pos < input.length) {\n    let phraseLength = 0;\n    let lastOccurrence = 0;\n    while (pos + phraseLength < input.length) {\n      let currentPhrase = input.slice(pos, pos + phraseLength + 1);\n      const windowStart = Math.max(0, pos - windowSize);\n      let currentOccurrence = lastIndexOfSubArray(\n        input.slice(\n          windowStart,\n          Math.min(windowStart + windowSize, pos + phraseLength)\n        ),\n        currentPhrase\n      );\n      if (currentOccurrence !== -1) {\n        phraseLength++;\n        lastOccurrence = currentOccurrence + windowStart;\n      } else {\n        break;\n      }\n    }\n\n    if (phraseLength === 0) {\n      yield { type: \"literal\", pos, symbol: input[pos], l: 1 };\n      pos += 1;\n    } else {\n      yield { type: \"copy\", pos, p: lastOccurrence, l: phraseLength };\n      pos += phraseLength;\n    }\n  }\n}\n\nexport function decompress(phrases: Phrase[]): number[] {\n  let output: number[] = [];\n  for (const phrase of phrases) {\n    if (phrase.type === \"literal\") {\n      output.push(phrase.symbol);\n    } else {\n      for (let i = 0; i < phrase.l; i++) {\n        output.push(output[phrase.p + i]);\n      }\n    }\n  }\n\n  return output;\n}\n\nexport function* compressRlz(\n  input: number[],\n  reference: number[]\n): Generator<RlzPhrase> {\n  let pos = 0;\n  while (pos < input.length) {\n    let phraseLength = 0;\n    let lastOccurrence = 0;\n    while (pos + phraseLength < input.length) {\n      let currentPhrase = input.slice(pos, pos + phraseLength + 1);\n      let currentOccurrence = indexOfSubArray(reference, currentPhrase);\n      if (currentOccurrence !== -1) {\n        phraseLength++;\n        lastOccurrence = currentOccurrence;\n      } else {\n        break;\n      }\n    }\n\n    if (phraseLength === 0) {\n      yield { rlz: true, type: \"literal\", pos, symbol: input[pos], l: 1 };\n      pos += 1;\n    } else {\n      yield {\n        rlz: true,\n        type: \"copy\",\n        pos,\n        p: lastOccurrence,\n        l: phraseLength,\n      };\n      pos += phraseLength;\n    }\n  }\n}\n\nexport function decompressRlz(\n  phrases: RlzPhrase[],\n  reference: number[]\n): number[] {\n  let output: number[] = [];\n  for (const phrase of phrases) {\n    if (phrase.type === \"literal\") {\n      output.push(phrase.symbol);\n    } else {\n      for (let i = 0; i < phrase.l; i++) {\n        output.push(reference[phrase.p + i]);\n      }\n    }\n  }\n\n  return output;\n}\n\nexport function compressRlzPrefix(\n  input: number[],\n  prefixLength: number\n): [Phrase[], Phrase[]] {\n  const prefixPhrases: Phrase[] = [];\n  const suffixPhrases: Phrase[] = [];\n  let pos = 0;\n  while (pos < input.length) {\n    let phraseLength = 0;\n    let lastOccurrence = 0;\n    while (pos + phraseLength < input.length) {\n      let currentPhrase = input.slice(pos, pos + phraseLength + 1);\n      let currentOccurrence = lastIndexOfSubArray(\n        input.slice(0, Math.min(pos + phraseLength, prefixLength)),\n        currentPhrase\n      );\n      if (\n        currentOccurrence !== -1 &&\n        (pos >= prefixLength || pos + phraseLength < prefixLength)\n      ) {\n        phraseLength++;\n        lastOccurrence = currentOccurrence;\n      } else {\n        break;\n      }\n    }\n\n    if (phraseLength === 0) {\n      const phrase: Phrase = { type: \"literal\", pos, symbol: input[pos], l: 1 };\n      if (pos < prefixLength) {\n        prefixPhrases.push(phrase);\n      } else {\n        suffixPhrases.push(phrase);\n      }\n      pos += 1;\n    } else {\n      const phrase: Phrase = {\n        type: \"copy\",\n        pos,\n        p: lastOccurrence,\n        l: phraseLength,\n      };\n      if (pos < prefixLength) {\n        prefixPhrases.push(phrase);\n      } else {\n        suffixPhrases.push(phrase);\n      }\n      pos += phraseLength;\n    }\n  }\n\n  return [prefixPhrases, suffixPhrases];\n}\n\nexport function relzMapping(\n  input: Phrase[],\n  reference: number[]\n): [Map<number, Phrase>, number[]] {\n  const symbolToPhraseMapping: Map<number, Phrase> = new Map();\n  const contentToSymbolMapping: [number[], number][] = [];\n  const mappedInput: number[] = [];\n\n  function getMapping(phrase: Phrase): number {\n    const currentContent =\n      phrase.type === \"literal\"\n        ? [phrase.symbol]\n        : reference.slice(phrase.p, phrase.p + phrase.l);\n    for (const [content, symbol] of contentToSymbolMapping) {\n      if (isEqual(content, currentContent)) {\n        return symbol;\n      }\n    }\n\n    const newMetaSymbol = symbolToPhraseMapping.size;\n    symbolToPhraseMapping.set(newMetaSymbol, phrase);\n    contentToSymbolMapping.push([currentContent, newMetaSymbol]);\n    return newMetaSymbol;\n  }\n\n  for (const phrase of input) {\n    mappedInput.push(getMapping(phrase));\n  }\n\n  return [symbolToPhraseMapping, mappedInput];\n}\n\nfunction extractLzLikeParsing(\n  phrases: Phrase[],\n  mapping: Map<number, Phrase>,\n  input: number[],\n  positionOffset: number\n): Phrase[] {\n  const result: Phrase[] = [];\n\n  for (let i = 0; i < phrases.length; i++) {\n    const pos = sum(result.map((p) => p.l)) + positionOffset;\n    const phrase = phrases[i];\n    if (phrase.type === \"literal\") {\n      const mappedPhrase = mapping.get(phrase.symbol);\n      if (mappedPhrase === undefined) {\n        throw new Error(\"no mapping for symbol \" + phrase.symbol);\n      }\n      result.push({\n        ...mappedPhrase,\n        pos,\n      });\n    } else {\n      const mappedPos =\n        sumBy(\n          input.slice(0, phrase.p).map((c) => mapping.get(c)),\n          (p) => p!.l\n        ) + positionOffset;\n      const mappedLength = sumBy(\n        input.slice(phrase.p, phrase.p + phrase.l).map((c) => mapping.get(c)),\n        (p) => p!.l\n      );\n\n      result.push({ type: \"copy\", pos, p: mappedPos, l: mappedLength });\n    }\n  }\n\n  return result;\n}\n\ninterface RelzResult {\n  firstPassPhrases: Phrase[];\n  metaSymbols: number[];\n  metaSymbolPhrases: Phrase[];\n  phrases: Phrase[];\n}\n\nexport function compressRelz(\n  input: number[],\n  prefixLength: number\n): RelzResult {\n  const [prefixPhrases, suffixPhrases] = [\n    ...compressRlzPrefix(input, prefixLength),\n  ];\n  const firstPassPhrases = [...prefixPhrases, ...suffixPhrases];\n  const [mapping, metaSymbols] = relzMapping(firstPassPhrases, input);\n  const metaSymbolPhrases = [...compressLz77(metaSymbols)];\n  const resultPhrases = extractLzLikeParsing(\n    metaSymbolPhrases,\n    mapping,\n    metaSymbols,\n    0\n  );\n\n  return {\n    firstPassPhrases,\n    metaSymbols,\n    metaSymbolPhrases,\n    phrases: resultPhrases,\n  };\n}\n\nexport interface RelzRecPass {\n  input: number[];\n  prefixPhrases: Phrase[];\n  suffixPhrases: Phrase[];\n  suffixMetaSymbols: number[];\n  suffixMetaSymbolsPhrases: Phrase[];\n  suffixPhrasesCompressed: Phrase[];\n  phrasesCompressed: Phrase[];\n}\nexport interface RelzRecursiveResult {\n  passes: RelzRecPass[];\n  phrases: Phrase[];\n}\n\nexport function compressRelzRecursive(\n  input: number[],\n  prefixLength: number,\n  recursionLimit: number | undefined = undefined\n): RelzRecursiveResult {\n  if (recursionLimit === 0) {\n    return {\n      passes: [],\n      phrases: input.map((c, pos) => ({\n        type: \"literal\",\n        pos,\n        symbol: c,\n        l: 1,\n      })),\n    };\n  }\n\n  const [prefixPhrases, suffixPhrases] = [\n    ...compressRlzPrefix(input, prefixLength),\n  ];\n  if (suffixPhrases.length > 0) {\n    const [mapping, metaSymbols] = relzMapping(\n      suffixPhrases,\n      input.slice(0, prefixLength)\n    );\n    const result = compressRelzRecursive(\n      metaSymbols,\n      prefixLength,\n      recursionLimit && recursionLimit - 1\n    );\n    const metaSymbolsPhrases = result.phrases;\n    const suffixPhrasesCompressed = extractLzLikeParsing(\n      metaSymbolsPhrases,\n      mapping,\n      metaSymbols,\n      prefixLength\n    );\n    const phrases = [...prefixPhrases, ...suffixPhrasesCompressed];\n\n    return {\n      passes: [\n        {\n          input,\n          prefixPhrases,\n          suffixPhrases,\n          suffixMetaSymbols: metaSymbols,\n          suffixMetaSymbolsPhrases: metaSymbolsPhrases,\n          suffixPhrasesCompressed,\n          phrasesCompressed: phrases,\n        },\n        ...result.passes,\n      ],\n      phrases,\n    };\n  } else {\n    return {\n      passes: [\n        {\n          input,\n          prefixPhrases,\n          suffixPhrases: [],\n          suffixMetaSymbols: [],\n          suffixMetaSymbolsPhrases: [],\n          suffixPhrasesCompressed: [],\n          phrasesCompressed: prefixPhrases,\n        },\n      ],\n      phrases: prefixPhrases,\n    };\n  }\n}\n","import { range, reverse, take } from \"lodash\";\nimport {\n  compressLz77,\n  compressRelz,\n  compressRelzRecursive,\n  compressRlz,\n  compressRlzPrefix,\n  compressWithSlidingWindow,\n  Phrase,\n  RelzRecPass,\n  RlzPhrase,\n} from \"../compression/algorithms\";\nimport { stringToCodePoints } from \"../compression/utils\";\nimport { CompressorType } from \"../compression/compressors\";\n\nexport type LzStep =\n  | { type: \"initial\" }\n  | { type: \"compress\"; phrase: number }\n  | { type: \"result\" };\n\nexport interface LzLikeVisualizationData {\n  type: \"lz-like\";\n  input: string;\n  phrases: Phrase[];\n  steps: LzStep[];\n  windowSize?: number;\n  prefixLength?: number;\n}\n\nexport interface RlzVisualizationData {\n  type: \"rlz\";\n  input: string;\n  reference: string;\n  phrases: RlzPhrase[];\n  steps: LzStep[];\n}\n\ntype RelzStep =\n  | { type: \"initial\" }\n  | { type: \"compress-first\"; phrase: number }\n  | { type: \"mapping\" }\n  | { type: \"compress-second\"; phrase: number }\n  | { type: \"back-mapping\"; phrase: number };\n\nexport interface RelzVisualizationData {\n  type: \"relz\";\n  input: string;\n  prefixLength: number;\n  firstPassPhrases: Phrase[];\n  metaSymbols: number[];\n  metaSymbolPhrases: Phrase[];\n  phrases: Phrase[];\n  steps: RelzStep[];\n}\n\ntype RelzRecStep =\n  | { type: \"initial\" }\n  | { type: \"compress\"; pass: number; phrase: number }\n  | { type: \"mapping\"; pass: number }\n  | { type: \"back-mapping\"; pass: number; suffixPhrase: number };\n\nexport interface RelzRecVisualizationData {\n  type: \"relz-rec\";\n  input: string;\n  prefixLength: number;\n  passes: RelzRecPass[];\n  phrases: Phrase[];\n  steps: RelzRecStep[];\n}\n\nexport type VisualizationData =\n  | LzLikeVisualizationData\n  | RlzVisualizationData\n  | RelzVisualizationData\n  | RelzRecVisualizationData;\n\nexport interface Settings {\n  windowSize: number;\n  prefixSize: number;\n  reference: string;\n  recursionLimit: number;\n}\n\ntype Partial<T> = {\n  [P in keyof T]+?: T[P];\n};\n\nexport function computeData(\n  type: CompressorType,\n  input: string,\n  settings: Partial<Settings>\n): VisualizationData {\n  const codePoints = stringToCodePoints(input);\n  if (type === \"lz77\") {\n    const phrases = [...compressLz77(codePoints)];\n    const steps: LzStep[] = [\n      { type: \"initial\" },\n      ...range(phrases.length).map((phrase) => ({\n        type: \"compress\" as const,\n        phrase,\n      })),\n      { type: \"result\" },\n    ];\n    return { type: \"lz-like\", input, steps, phrases };\n  } else if (type === \"lz-sw\") {\n    const phrases = [\n      ...compressWithSlidingWindow(codePoints, settings.windowSize ?? 5),\n    ];\n    const steps: LzStep[] = [\n      { type: \"initial\" },\n      ...range(phrases.length).map((phrase) => ({\n        type: \"compress\" as const,\n        phrase,\n      })),\n      { type: \"result\" },\n    ];\n    return {\n      type: \"lz-like\",\n      input,\n      phrases,\n      windowSize: settings.windowSize,\n      steps,\n    };\n  } else if (type === \"rlz\") {\n    const { reference } = settings;\n    const referenceCodePoints = stringToCodePoints(reference ?? \"\");\n    const phrases = [...compressRlz(codePoints, referenceCodePoints)];\n    const steps: LzStep[] = [\n      { type: \"initial\" },\n      ...range(phrases.length).map((phrase) => ({\n        type: \"compress\" as const,\n        phrase,\n      })),\n      { type: \"result\" },\n    ];\n    return {\n      type: \"rlz\",\n      input,\n      reference: reference ?? \"\",\n      phrases,\n      steps,\n    };\n  } else if (type === \"rlz-pref\") {\n    const [prefixPhrases, suffixPhrases] = [\n      ...compressRlzPrefix(codePoints, settings.prefixSize ?? 5),\n    ];\n    const phrases = [...prefixPhrases, ...suffixPhrases];\n    const steps: LzStep[] = [\n      { type: \"initial\" },\n      ...range(phrases.length).map((phrase) => ({\n        type: \"compress\" as const,\n        phrase,\n      })),\n      { type: \"result\" },\n    ];\n    return {\n      type: \"lz-like\",\n      input,\n      phrases,\n      prefixLength: settings.prefixSize,\n      steps,\n    };\n  } else if (type === \"relz\") {\n    const result = compressRelz(codePoints, settings.prefixSize ?? 5);\n    const steps: RelzStep[] = [\n      { type: \"initial\" },\n      ...range(result.firstPassPhrases.length).map((phrase) => ({\n        type: \"compress-first\" as const,\n        phrase,\n      })),\n      { type: \"mapping\" },\n      ...range(result.metaSymbolPhrases.length).map((phrase) => ({\n        type: \"compress-second\" as const,\n        phrase,\n      })),\n      ...range(result.phrases.length).map((phrase) => ({\n        type: \"back-mapping\" as const,\n        phrase,\n      })),\n    ];\n    return {\n      type: \"relz\",\n      input,\n      prefixLength: settings.prefixSize ?? 5,\n      ...result,\n      steps,\n    };\n  } else {\n    const result = compressRelzRecursive(\n      codePoints,\n      settings.prefixSize ?? 5,\n      settings.recursionLimit\n    );\n    const lastPass = result.passes.length - 1;\n    const steps: RelzRecStep[] = [\n      { type: \"initial\" },\n      ...result.passes.flatMap((pass, i) => [\n        ...pass.prefixPhrases.map((p, h) => ({\n          type: \"compress\" as const,\n          pass: i,\n          phrase: h,\n        })),\n        ...pass.suffixPhrases.map((p, h) => ({\n          type: \"compress\" as const,\n          pass: i,\n          phrase: h + pass.prefixPhrases.length,\n        })),\n        ...(i === lastPass ? [] : [{ type: \"mapping\" as const, pass: i }]),\n      ]),\n      ...reverse(take([...result.passes], result.passes.length - 1)).flatMap(\n        (pass, i) =>\n          pass.suffixPhrasesCompressed.map((p, h) => ({\n            type: \"back-mapping\" as const,\n            pass: result.passes.length - i - 2,\n            suffixPhrase: h,\n          }))\n      ),\n    ];\n    return {\n      type: \"relz-rec\",\n      input,\n      prefixLength: settings.prefixSize ?? 5,\n      passes: result.passes,\n      phrases: result.phrases,\n      steps,\n    };\n  }\n}\n","const TARGET_COLOR = \"#E1BE6A\";\nconst SOURCE_COLOR = \"#40B0A6\";\n\nexport function SharedDefinitions() {\n  return (\n    <defs>\n      <marker\n        id=\"arrowhead\"\n        markerWidth=\"100\"\n        markerHeight=\"7\"\n        refX=\"9\"\n        refY=\"3.5\"\n        orient=\"auto\"\n      >\n        <polygon points=\"0 0, 10 3.5, 0 7\" />\n      </marker>\n\n      <linearGradient id=\"split-color\" gradientTransform=\"rotate(45)\">\n        <stop offset=\"75%\" stopColor={TARGET_COLOR} />\n        <stop offset=\"75%\" stopColor={SOURCE_COLOR} />\n      </linearGradient>\n    </defs>\n  );\n}\n\nexport interface ArrowProps {\n  x1: number;\n  x2: number;\n  y: number;\n}\n\nexport function Arrow(props: ArrowProps) {\n  const { x1, x2, y } = props;\n  const l = x2 - x1;\n  return (\n    <path\n      d={`M ${x1} ${y} v -20 h ${l} v 19`}\n      markerEnd=\"url(#arrowhead)\"\n      stroke=\"black\"\n      fill=\"none\"\n    />\n  );\n}\n\nexport interface ArrowProps2 {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  straight?: boolean;\n}\n\nexport function Arrow2(props: ArrowProps2) {\n  const { x1, y1, x2, y2, straight } = props;\n\n  if (straight) {\n    const v1 = y1 < y2 ? 10 : -10;\n    const v2 = y1 < y2 ? 20 : -20;\n\n    return (\n      <path\n        d={`M ${x1} ${y1} v ${v1} L ${x2} ${y2 - 20} v ${v2}`}\n        markerEnd=\"url(#arrowhead)\"\n        stroke=\"black\"\n        fill=\"none\"\n      />\n    );\n  } else {\n    const l = x2 - x1;\n    const h = (y2 - y1) / 2;\n\n    const v1 = y2 < y1 ? h : -h;\n    const v2 = y2 < y1 ? h : -h;\n    return (\n      <path\n        d={`m ${x1} ${y1} v ${v1} h ${l} v ${v2}`}\n        markerEnd=\"url(#arrowhead)\"\n        stroke=\"black\"\n        fill=\"none\"\n      />\n    );\n  }\n}\n\nexport type CharacterColor = \"none\" | \"source\" | \"target\" | \"source-target\";\n\nexport interface CharacterProps {\n  x: number;\n  y: number;\n  w?: number;\n  h?: number;\n  text: string;\n  color?: CharacterColor;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nexport function Character(props: CharacterProps) {\n  const { x, y, text, color } = props;\n  const w = props.w || 30;\n  const h = props.h || 30;\n  const fill =\n    color === \"source\"\n      ? SOURCE_COLOR\n      : color === \"target\"\n      ? TARGET_COLOR\n      : color === \"source-target\"\n      ? \"url(#split-color)\"\n      : \"none\";\n  return (\n    <>\n      <rect x={x} y={y} width={w} height={h} fill={fill} stroke=\"black\" />\n      <foreignObject\n        x={x}\n        y={y}\n        width={w}\n        height={h}\n        onMouseEnter={props.onMouseEnter}\n        onMouseLeave={props.onMouseLeave}\n      >\n        <div\n          style={{\n            //   width: \"30px\",\n            //   height: \"30px\",\n            overflowY: \"auto\",\n            textAlign: \"center\",\n            verticalAlign: \"middle\",\n            lineHeight: `${h}px`,\n            userSelect: \"none\",\n          }}\n        >\n          {text}\n        </div>\n      </foreignObject>\n    </>\n  );\n}\n\nexport interface CurlyBraceProps {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  w: number;\n  q: number;\n}\n\nexport function CurlyBrace(props: CurlyBraceProps) {\n  const { x1, y1, x2, y2, w, q } = props;\n  var dx = x1 - x2;\n  var dy = y1 - y2;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  dx = dx / len;\n  dy = dy / len;\n\n  //Calculate Control Points of path,\n  const qx1 = x1 + q * w * dy;\n  const qy1 = y1 - q * w * dx;\n  const qx2 = x1 - 0.25 * len * dx + (1 - q) * w * dy;\n  const qy2 = y1 - 0.25 * len * dy - (1 - q) * w * dx;\n  const tx1 = x1 - 0.5 * len * dx + w * dy;\n  const ty1 = y1 - 0.5 * len * dy - w * dx;\n  const qx3 = x2 + q * w * dy;\n  const qy3 = y2 - q * w * dx;\n  const qx4 = x1 - 0.75 * len * dx + (1 - q) * w * dy;\n  const qy4 = y1 - 0.75 * len * dy - (1 - q) * w * dx;\n\n  const path = `M ${x1} ${y1} Q ${qx1} ${qy1} ${qx2} ${qy2} T ${tx1} ${ty1} M ${x2} ${y2} Q ${qx3} ${qy3} ${qx4} ${qy4} T ${tx1} ${ty1}`;\n\n  return <path d={path} stroke=\"black\" fill=\"none\"></path>;\n}\n\nexport interface PhraseDisplayProps {\n  x: number;\n  y: number;\n  l: number;\n  text: string;\n  w?: number;\n}\n\nexport function PhraseDisplay(props: PhraseDisplayProps) {\n  const { x, y, l, text } = props;\n  if (l === 1) {\n    return (\n      <foreignObject x={x - 20} y={y} width=\"60\" height=\"40\">\n        <div\n          style={{\n            //   width: \"30px\",\n            //   height: \"30px\",\n            overflowY: \"auto\",\n            textAlign: \"center\",\n            verticalAlign: \"middle\",\n            lineHeight: \"40px\",\n            userSelect: \"none\",\n            transform: \"rotate(-45deg)\",\n          }}\n        >\n          {text}\n        </div>\n      </foreignObject>\n    );\n  } else {\n    const x1 = x + 3;\n    const x2 = x + l * 30 - 3;\n    const w = props.w ?? 50;\n    return (\n      <>\n        <CurlyBrace x1={x1} x2={x2} y1={y} y2={y} w={10} q={0.6}></CurlyBrace>\n        <foreignObject\n          x={x1 + Math.abs(x2 - x1) / 2 - w / 2}\n          y={y}\n          width={w}\n          height=\"40\"\n        >\n          <div\n            style={{\n              //   width: \"30px\",\n              //   height: \"30px\",\n              overflowY: \"auto\",\n              textAlign: \"center\",\n              verticalAlign: \"middle\",\n              lineHeight: \"40px\",\n              userSelect: \"none\",\n            }}\n          >\n            {text}\n          </div>\n        </foreignObject>\n      </>\n    );\n  }\n}\n\nexport interface ShortPhraseProps {\n  x: number;\n  y: number;\n  text: string;\n}\n\nexport function ShortPhrase(props: ShortPhraseProps) {\n  const { x, y, text } = props;\n  return (\n    <foreignObject x={x} y={y} width=\"60\" height=\"40\">\n      <div\n        style={{\n          //   width: \"30px\",\n          //   height: \"30px\",\n          overflowY: \"auto\",\n          textAlign: \"center\",\n          verticalAlign: \"middle\",\n          lineHeight: \"40px\",\n          userSelect: \"none\",\n          transform: \"rotate(-45deg)\",\n        }}\n      >\n        {text}\n      </div>\n    </foreignObject>\n  );\n}\n\nexport interface CopyingPhraseProps {\n  x1: number;\n  x2: number;\n  y: number;\n  p: number;\n  l: number;\n  w?: number;\n}\n\nexport function CopyingPhrase(props: CopyingPhraseProps) {\n  const { x1, x2, y, p, l } = props;\n  const w = props.w ?? 50;\n\n  return (\n    <>\n      <CurlyBrace x1={x1} x2={x2} y1={y} y2={y} w={10} q={0.6}></CurlyBrace>\n      <foreignObject\n        x={x1 + Math.abs(x2 - x1) / 2 - w / 2}\n        y={y}\n        width={w}\n        height=\"40\"\n      >\n        <div\n          style={{\n            //   width: \"30px\",\n            //   height: \"30px\",\n            overflowY: \"auto\",\n            textAlign: \"center\",\n            verticalAlign: \"middle\",\n            lineHeight: \"40px\",\n            userSelect: \"none\",\n          }}\n        >\n          {`(${p}, ${l})`}\n        </div>\n      </foreignObject>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { VisualizationData } from \"./common\";\nimport {\n  Arrow,\n  ArrowProps,\n  Character,\n  CharacterProps,\n  PhraseDisplay,\n  PhraseDisplayProps,\n  SharedDefinitions,\n} from \"./drawing\";\n\nexport interface PhrasesVisualizationProps {\n  data: VisualizationData;\n}\n\nexport function PhrasesVisualization(props: PhrasesVisualizationProps) {\n  const { data } = props;\n  const [highlightedPhraseIdx, setHighlightedPhraseIdx] = useState<number>();\n  const highlightedPhrase =\n    highlightedPhraseIdx !== undefined\n      ? data.phrases[highlightedPhraseIdx]\n      : undefined;\n\n  const characters: CharacterProps[] = data.input.split(\"\").map((c, i) => ({\n    text: c,\n    x: i * 30 + 30,\n    y: 30,\n  }));\n  const phrases: PhraseDisplayProps[] = [];\n  let referenceArrow: ArrowProps | undefined = undefined;\n\n  if (data.type === \"rlz\") {\n    data.phrases.forEach((p, i) => {\n      const pos = p.pos;\n      if (p.type === \"literal\") {\n        const text = `(${String.fromCodePoint(p.symbol)},0)`;\n        phrases.push({\n          x: pos * 30 + 30,\n          y: 65,\n          l: 1,\n          text,\n        });\n      } else {\n        const text = `(${p.p},${p.l})`;\n        phrases.push({\n          x: pos * 30 + 30,\n          y: 65,\n          l: p.l,\n          text,\n        });\n      }\n      for (let h = 0; h < p.l; h++) {\n        characters[p.pos + h].onMouseEnter = () => setHighlightedPhraseIdx(i);\n        characters[p.pos + h].onMouseLeave = () =>\n          setHighlightedPhraseIdx(undefined);\n      }\n    });\n  } else {\n    data.phrases.forEach((p, i) => {\n      const pos = p.pos;\n      if (p.type === \"literal\") {\n        const text = `(${String.fromCodePoint(p.symbol)},0)`;\n        phrases.push({\n          x: pos * 30 + 30,\n          y: 65,\n          l: 1,\n          text,\n        });\n      } else {\n        const text = `(${p.p},${p.l})`;\n        phrases.push({\n          x: pos * 30 + 30,\n          y: 65,\n          l: p.l,\n          text,\n        });\n      }\n      for (let h = 0; h < p.l; h++) {\n        characters[p.pos + h].onMouseEnter = () => setHighlightedPhraseIdx(i);\n        characters[p.pos + h].onMouseLeave = () =>\n          setHighlightedPhraseIdx(undefined);\n      }\n    });\n  }\n\n  if (highlightedPhrase) {\n    for (let i = 0; i < highlightedPhrase.l; i++) {\n      characters[highlightedPhrase.pos + i].color = \"target\";\n      if (data.type !== \"rlz\" && highlightedPhrase.type === \"copy\") {\n        if (characters[highlightedPhrase.p + i].color === \"target\") {\n          characters[highlightedPhrase.p + i].color = \"source-target\";\n        } else {\n          characters[highlightedPhrase.p + i].color = \"source\";\n        }\n      }\n    }\n\n    if (data.type !== \"rlz\" && highlightedPhrase.type === \"copy\") {\n      referenceArrow = {\n        x1: highlightedPhrase.pos * 30 + 45,\n        x2: highlightedPhrase.p * 30 + 45,\n        y: 30,\n      };\n    }\n  }\n\n  const width = data.input.length * 30 + 60;\n  const height = 120;\n\n  return (\n    <svg width={width} height={height}>\n      <SharedDefinitions />\n\n      {characters.map((props, i) => (\n        <Character key={i} {...props} />\n      ))}\n\n      {phrases.map((props, i) => (\n        <PhraseDisplay key={i} {...props} />\n      ))}\n\n      {referenceArrow && <Arrow {...referenceArrow} />}\n    </svg>\n  );\n}\n","import React from \"react\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport { CompressorType } from \"../compression/compressors\";\nimport { computeData, Settings } from \"../visualization/common\";\nimport { PhrasesVisualization } from \"../visualization/PhrasesVisualization\";\n\ninterface CompressorOutputProps {\n  input: string;\n  type: CompressorType;\n  settings: Settings;\n}\n\nexport function CompressorOutput(props: CompressorOutputProps): JSX.Element {\n  const { type, settings, input } = props;\n  const data = computeData(type, input, settings);\n\n  return (\n    <Card style={{ height: \"100%\" }}>\n      <Card.Body>\n        <Row className=\"overflow-auto\">\n          <Col>\n            <PhrasesVisualization data={data} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            z = {data.phrases.length}\n            {type === \"rlz\" ? ` (+ ${settings.reference.length})` : \"\"}\n          </Col>\n          <Col>l/z = {(input.length / data.phrases.length).toFixed(2)}</Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n}\n","import { keys } from \"lodash\";\nimport { useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  availableCompressors,\n  CompressorType,\n} from \"./compression/compressors\";\nimport { Settings } from \"./visualization/common\";\n\nexport function useQuery() {\n  const location = useLocation();\n\n  return useMemo(() => new URLSearchParams(location.search), [location.search]);\n}\n\nexport function useEmbedState(): boolean {\n  const location = useLocation();\n  const query = useQuery();\n  return query.has(\"embed\") || location.pathname === \"/embed\";\n}\n\nexport function useSettingsFromQuery(): {\n  type: CompressorType;\n  input: string;\n  step: number;\n  settings: Settings;\n} {\n  const query = useQuery();\n  const type = query.get(\"type\");\n  const input = query.get(\"input\") ?? \"AABCDDDCABBDBADDACB\";\n  const step = parseInt(query.get(\"step\") ?? \"0\");\n  const windowSize = query.get(\"window\");\n  const prefix = query.get(\"prefix\");\n  const recursion = query.get(\"recursion\");\n  const reference = query.get(\"reference\");\n  const settings: Settings = useMemo(\n    () => ({\n      windowSize: windowSize === null ? 5 : parseInt(windowSize),\n      prefixSize: prefix === null ? 5 : parseInt(prefix),\n      recursionLimit: recursion === null ? 5 : parseInt(recursion),\n      reference: reference === null ? \"\" : reference,\n    }),\n    [windowSize, prefix, recursion, reference]\n  );\n\n  return useMemo(\n    () =>\n      type !== null && keys(availableCompressors).includes(type)\n        ? { type: type as CompressorType, input, step, settings }\n        : { type: \"lz77\", input, step, settings },\n    [type, input, step, settings]\n  );\n}\n\nexport function useLocalStorage(\n  key: string,\n  defaultValue: any\n): [any, (value: any) => void] {\n  const stringValue = window.localStorage.getItem(key);\n  function setValue(value: any) {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  if (stringValue !== null) {\n    const value = JSON.parse(stringValue);\n    return [value, setValue];\n  }\n  return [defaultValue, setValue];\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport {\n  availableCompressors,\n  CompressorType,\n} from \"../compression/compressors\";\nimport { CompressorSettingEditor } from \"../components/CompressorSettingsEditor\";\nimport { CompressorOutput } from \"../components/CompressorOutput\";\nimport FormControl from \"react-bootstrap/esm/FormControl\";\nimport { entries, keys } from \"lodash\";\nimport { Settings } from \"../visualization/common\";\nimport { useEmbedState, useQuery } from \"../hooks\";\n\nexport function Compare() {\n  const [input, setInput] = useState(\"AAABBBCCCC\");\n  const [compressorType, setCompressorType] = useState<CompressorType>(\"lz77\");\n  const isEmebed = useEmbedState();\n  const query = useQuery();\n  const queryInput = query.get(\"input\");\n  useEffect(() => {\n    if (queryInput !== null) {\n      setInput(queryInput);\n    }\n  }, [queryInput]);\n\n  const [compressorSettings, setCompressorSettings] = useState<\n    [CompressorType, Settings][]\n  >(\n    keys(availableCompressors).map((type) => [\n      type as CompressorType,\n      { windowSize: 5, reference: \"\", prefixSize: 5, recursionLimit: 5 },\n    ])\n  );\n\n  function addCompressor() {\n    setCompressorSettings([\n      ...compressorSettings,\n      [\n        compressorType,\n        { windowSize: 5, reference: \"\", prefixSize: 5, recursionLimit: 5 },\n      ],\n    ]);\n  }\n\n  return (\n    <Container className=\"my-5\" fluid={isEmebed}>\n      <Row>\n        <Col>\n          <Card>\n            <Card.Header>Input</Card.Header>\n            <Card.Body>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Input Text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n              ></FormControl>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row className=\"mt-5\">\n        <Col lg=\"4\">\n          <h2>Compressors</h2>\n        </Col>\n        <Col lg=\"8\" className=\"d-none d-lg-block\">\n          <h2>Outputs</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs=\"12\" md=\"4\" lg=\"3\">\n          <Dropdown as={ButtonGroup} className=\"w-100\">\n            <Button onClick={addCompressor} className=\"w-75\">\n              {\"Add \" + availableCompressors[compressorType].title}\n            </Button>\n\n            <Dropdown.Toggle split />\n\n            <Dropdown.Menu>\n              {entries(availableCompressors).map(([type, { title }]) => (\n                <Dropdown.Item\n                  key={type}\n                  onClick={() => setCompressorType(type as CompressorType)}\n                >\n                  {title}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n      </Row>\n\n      {compressorSettings.map(([type, settings], idx) => (\n        <Row key={idx} className=\"mt-4\">\n          <Col xs=\"12\" lg=\"4\">\n            <CompressorSettingEditor\n              type={type}\n              settings={settings}\n              onChange={(newSettings) =>\n                setCompressorSettings(\n                  compressorSettings.map(([type, settings], i) =>\n                    idx === i ? [type, newSettings] : [type, settings]\n                  )\n                )\n              }\n              remove={() =>\n                setCompressorSettings(\n                  compressorSettings.filter((v, i) => i !== idx)\n                )\n              }\n            ></CompressorSettingEditor>\n          </Col>\n          <Col xs=\"12\" lg=\"8\" className=\"mt-1 mt-lg-0\">\n            <CompressorOutput\n              type={type}\n              settings={settings}\n              input={input}\n            ></CompressorOutput>\n          </Col>\n        </Row>\n      ))}\n      {compressorSettings.length === 0 && (\n        <Row className=\"justify-content-center mt-5\">\n          <Col xs=\"auto\">\n            <h4>No compressors added yet...</h4>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n","import { take } from \"lodash\";\nimport React from \"react\";\nimport { LzLikeVisualizationData } from \"./common\";\nimport {\n  Arrow,\n  ArrowProps,\n  Character,\n  CharacterProps,\n  PhraseDisplay,\n  PhraseDisplayProps,\n  SharedDefinitions,\n} from \"./drawing\";\n\nexport interface LzLikeVisualizationProps {\n  data: LzLikeVisualizationData;\n  step: number;\n}\n\nexport function LzLikeVisualization(props: LzLikeVisualizationProps) {\n  const { data, step } = props;\n  const currentStep = data.steps[Math.min(step, data.steps.length - 1)];\n\n  const characters: CharacterProps[] = data.input.split(\"\").map((c, i) => ({\n    text: c,\n    x: i * 30 + 30,\n    y: 30,\n  }));\n  const phrases: PhraseDisplayProps[] = [];\n  let referenceArrow: ArrowProps | undefined = undefined;\n\n  const phraseCount =\n    currentStep.type === \"compress\"\n      ? currentStep.phrase + 1\n      : currentStep.type === \"result\"\n      ? data.phrases.length\n      : 0;\n  take(data.phrases, phraseCount).forEach((p) => {\n    const pos = p.pos;\n    if (p.type === \"literal\") {\n      const text = `(${String.fromCodePoint(p.symbol)},0)`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 65,\n        l: 1,\n        text,\n      });\n    } else {\n      const text = `(${p.p},${p.l})`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 65,\n        l: p.l,\n        text,\n      });\n    }\n  });\n\n  if (currentStep.type === \"compress\") {\n    const phrase = data.phrases[currentStep.phrase];\n    if (phrase.type === \"copy\") {\n      referenceArrow = {\n        x1: phrase.pos * 30 + 45,\n        x2: phrase.p * 30 + 45,\n        y: 30,\n      };\n    }\n    for (let i = 0; i < phrase.l; i++) {\n      characters[phrase.pos + i].color = \"target\";\n      if (phrase.type === \"copy\") {\n        if (characters[phrase.p + i].color === \"target\") {\n          characters[phrase.p + i].color = \"source-target\";\n        } else {\n          characters[phrase.p + i].color = \"source\";\n        }\n      }\n    }\n  }\n\n  return (\n    <svg height=\"160\" width={data.input.length * 30 + 40}>\n      <SharedDefinitions></SharedDefinitions>\n\n      {characters.map((props, i) => (\n        <Character key={i} {...props} />\n      ))}\n\n      {phrases.map((props, i) => (\n        <PhraseDisplay key={i} {...props} />\n      ))}\n\n      {referenceArrow && <Arrow {...referenceArrow} />}\n    </svg>\n  );\n}\n","import { take } from \"lodash\";\nimport React from \"react\";\nimport { RlzVisualizationData } from \"./common\";\nimport {\n  Character,\n  SharedDefinitions,\n  Arrow2,\n  PhraseDisplayProps,\n  CharacterProps,\n  ArrowProps2,\n  PhraseDisplay,\n} from \"./drawing\";\n\nexport interface RlzVisualizationProps {\n  data: RlzVisualizationData;\n  step: number;\n}\n\nexport function RlzVisualization(props: RlzVisualizationProps) {\n  const { data, step } = props;\n  const currentStep = data.steps[Math.min(step, data.steps.length - 1)];\n\n  const refCharacters: CharacterProps[] = data.reference\n    .split(\"\")\n    .map((c, i) => ({\n      text: c,\n      x: i * 30 + 30,\n      y: 10,\n    }));\n  const characters: CharacterProps[] = data.input.split(\"\").map((c, i) => ({\n    text: c,\n    x: i * 30 + 30,\n    y: 90,\n  }));\n  const phrases: PhraseDisplayProps[] = [];\n  let referenceArrow: ArrowProps2 | undefined = undefined;\n\n  const phraseCount =\n    currentStep.type === \"compress\"\n      ? currentStep.phrase + 1\n      : currentStep.type === \"result\"\n      ? data.phrases.length\n      : 0;\n  take(data.phrases, phraseCount).forEach((p) => {\n    const pos = p.pos;\n    if (p.type === \"literal\") {\n      const text = `(${String.fromCodePoint(p.symbol)},0)`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 125,\n        l: 1,\n        text,\n      });\n    } else {\n      const text = `(${p.p},${p.l})`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 125,\n        l: p.l,\n        text,\n      });\n    }\n  });\n\n  if (currentStep.type === \"compress\") {\n    const phrase = data.phrases[currentStep.phrase];\n    if (phrase.type === \"copy\") {\n      referenceArrow = {\n        x1: phrase.pos * 30 + 45,\n        y1: 90,\n        x2: phrase.p * 30 + 45,\n        y2: 41,\n      };\n    }\n    for (let i = 0; i < phrase.l; i++) {\n      characters[phrase.pos + i].color = \"target\";\n      if (phrase.type === \"copy\") {\n        refCharacters[phrase.p + i].color = \"source\";\n      }\n    }\n  }\n\n  return (\n    <svg\n      height=\"200\"\n      width={Math.max(data.input.length, data.reference.length) * 30 + 60}\n    >\n      <SharedDefinitions></SharedDefinitions>\n\n      {refCharacters.map((props, i) => (\n        <Character key={i} {...props} />\n      ))}\n\n      {characters.map((props, i) => (\n        <Character key={i} {...props} />\n      ))}\n\n      {referenceArrow && <Arrow2 {...referenceArrow} />}\n\n      {phrases.map((props, i) => (\n        <PhraseDisplay key={i} {...props} />\n      ))}\n    </svg>\n  );\n}\n","import { take } from \"lodash\";\nimport React from \"react\";\nimport { RelzVisualizationData } from \"./common\";\nimport {\n  Arrow,\n  Character,\n  SharedDefinitions,\n  Arrow2,\n  PhraseDisplayProps,\n  ArrowProps2,\n  PhraseDisplay,\n  ArrowProps,\n  CharacterProps,\n} from \"./drawing\";\n\nexport interface RelzVisualizationProps {\n  data: RelzVisualizationData;\n  step: number;\n}\n\nexport function RelzVisualization(props: RelzVisualizationProps) {\n  const { data, step } = props;\n  const { input } = data;\n  const currentStep = data.steps[Math.min(step, data.steps.length - 1)];\n  console.log(currentStep);\n\n  const characters: CharacterProps[] = input.split(\"\").map((c, i) => ({\n    x: i * 30 + 30,\n    y: 30,\n    text: c,\n    color: \"none\",\n  }));\n  const metaSymbols: CharacterProps[] =\n    currentStep.type !== \"initial\" && currentStep.type !== \"compress-first\"\n      ? data.metaSymbols.map((c, i) => ({\n          x: i * 30 + 30,\n          y: 240,\n          text: String(c),\n          color: \"none\",\n        }))\n      : [];\n\n  const phrases: PhraseDisplayProps[] = [];\n  const mappingArrows: ArrowProps2[] = [];\n  let referenceArrow: ArrowProps | undefined = undefined;\n\n  const [phrasesVisible, metaPhrasesVisible, compressedPhrasesVisible] =\n    currentStep.type === \"initial\"\n      ? [0, 0, 0]\n      : currentStep.type === \"compress-first\"\n      ? [currentStep.phrase + 1, 0, 0]\n      : currentStep.type === \"mapping\"\n      ? [data.firstPassPhrases.length, 0, 0]\n      : currentStep.type === \"compress-second\"\n      ? [data.firstPassPhrases.length, currentStep.phrase + 1, 0]\n      : [\n          data.firstPassPhrases.length,\n          data.metaSymbolPhrases.length,\n          currentStep.phrase + 1,\n        ];\n\n  take(data.firstPassPhrases, phrasesVisible).forEach((p) => {\n    const pos = p.pos;\n    if (p.type === \"literal\") {\n      const text = `(${String.fromCodePoint(p.symbol)},0)`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 65,\n        l: 1,\n        text,\n      });\n    } else {\n      const text = `(${p.p},${p.l})`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 65,\n        l: p.l,\n        text,\n      });\n    }\n  });\n\n  take(data.metaSymbolPhrases, metaPhrasesVisible).forEach((p) => {\n    const pos = p.pos;\n    if (p.type === \"literal\") {\n      const text = `(${p.symbol},0)`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 280,\n        l: 1,\n        text,\n      });\n    } else {\n      const text = `(${p.p},${p.l})`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 280,\n        l: p.l,\n        text,\n      });\n    }\n  });\n\n  take(data.phrases, compressedPhrasesVisible).forEach((p, i) => {\n    const pos = p.pos;\n    if (p.type === \"literal\") {\n      const text = `(${String.fromCodePoint(p.symbol)},0)`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 125,\n        l: 1,\n        text,\n      });\n    } else {\n      const text = `(${p.p},${p.l})`;\n      phrases.push({\n        x: pos * 30 + 30,\n        y: 125,\n        l: p.l,\n        text,\n      });\n    }\n\n    const metaPhrase = data.metaSymbolPhrases[i];\n    mappingArrows.push({\n      x1: metaPhrase.pos * 30 + 30 + metaPhrase.l * 15,\n      y1: 240,\n      x2: p.pos * 30 + 30 + p.l * 15,\n      y2: 210,\n      straight: true,\n    });\n  });\n\n  if (currentStep.type === \"compress-first\") {\n    const phrase = data.firstPassPhrases[currentStep.phrase];\n    if (phrase.type === \"copy\") {\n      referenceArrow = {\n        x1: phrase.pos * 30 + 45,\n        x2: phrase.p * 30 + 45,\n        y: 30,\n      };\n    }\n    for (let i = 0; i < phrase.l; i++) {\n      characters[phrase.pos + i].color = \"target\";\n      if (phrase.type === \"copy\") {\n        if (characters[phrase.p + i].color === \"target\") {\n          characters[phrase.p + i].color = \"source-target\";\n        } else {\n          characters[phrase.p + i].color = \"source\";\n        }\n      }\n    }\n  }\n\n  if (currentStep.type === \"compress-second\") {\n    const phrase = data.metaSymbolPhrases[currentStep.phrase];\n    if (phrase.type === \"copy\") {\n      referenceArrow = {\n        x1: phrase.pos * 30 + 45,\n        x2: phrase.p * 30 + 45,\n        y: 240,\n      };\n    }\n    for (let i = 0; i < phrase.l; i++) {\n      metaSymbols[phrase.pos + i].color = \"target\";\n      if (phrase.type === \"copy\") {\n        if (metaSymbols[phrase.p + i].color === \"target\") {\n          metaSymbols[phrase.p + i].color = \"source-target\";\n        } else {\n          metaSymbols[phrase.p + i].color = \"source\";\n        }\n      }\n    }\n  }\n\n  if (currentStep.type === \"mapping\") {\n    data.firstPassPhrases.forEach((p, i) => {\n      mappingArrows.push({\n        x1: p.pos * 30 + 30 + p.l * 15,\n        y1: 110,\n        x2: i * 30 + +45,\n        y2: 240,\n        straight: true,\n      });\n    });\n  }\n\n  return (\n    <svg height=\"350\" width={data.input.length * 30 + 60}>\n      <SharedDefinitions></SharedDefinitions>\n\n      <SharedDefinitions></SharedDefinitions>\n\n      {characters.map((props, i) => (\n        <Character key={i} {...props} />\n      ))}\n\n      {metaSymbols.map((props, i) => (\n        <Character key={i} {...props} />\n      ))}\n\n      {phrases.map((props, i) => (\n        <PhraseDisplay key={i} {...props} />\n      ))}\n\n      {referenceArrow && <Arrow {...referenceArrow} />}\n\n      {mappingArrows.map((props, i) => (\n        <Arrow2 key={i} {...props} straight></Arrow2>\n      ))}\n\n      {currentStep.type === \"back-mapping\" && (\n        <line\n          x1=\"30\"\n          y1=\"115\"\n          x2={input.length * 30 + 30}\n          y2=\"115\"\n          stroke=\"black\"\n        />\n      )}\n      {currentStep.type === \"back-mapping\" && (\n        <line\n          x1=\"30\"\n          y1=\"119\"\n          x2={input.length * 30 + 30}\n          y2=\"119\"\n          stroke=\"black\"\n        />\n      )}\n    </svg>\n  );\n}\n","import { drop, dropWhile, last, sum, take } from \"lodash\";\nimport React from \"react\";\nimport { RelzRecVisualizationData } from \"./common\";\nimport {\n  Arrow,\n  Arrow2,\n  ArrowProps,\n  ArrowProps2,\n  Character,\n  CharacterProps,\n  PhraseDisplay,\n  PhraseDisplayProps,\n  SharedDefinitions,\n} from \"./drawing\";\n\nexport interface RelzRecVisualizationProps {\n  data: RelzRecVisualizationData;\n  step: number;\n}\n\nexport function RelzRecVisualization(props: RelzRecVisualizationProps) {\n  const { data, step: currentPhrase } = props;\n  const { passes, prefixLength } = data;\n  const lineDistance = 120;\n  const step = data.steps[Math.min(currentPhrase, data.steps.length - 1)];\n\n  const passOffsets = passes.reduce(\n    (lengths: number[], pass) => {\n      const length =\n        (last(lengths) ?? 0) + sum(pass.prefixPhrases.map((p) => p.l));\n      return [...lengths, length];\n    },\n    [0]\n  );\n\n  const [\n    passesVisible,\n    phrasesVisible,\n    mappingsVisible,\n    currentBackMappingPass,\n  ] =\n    step.type === \"initial\"\n      ? [1, 0, 0, 0]\n      : step.type === \"compress\"\n      ? [step.pass + 1, step.phrase + 1, step.pass - 1]\n      : step.type === \"mapping\"\n      ? [step.pass + 2, 0, step.pass + 1]\n      : [passes.length, prefixLength, 0, step.pass, step.suffixPhrase];\n  const characters: CharacterProps[][] = take(passes, passesVisible).map(\n    ({ input }, i) =>\n      input.map((c, h) => ({\n        x: h * 30 + passOffsets[i] * 30 + 30,\n        y: i * lineDistance + 30,\n        text: i === 0 ? String.fromCodePoint(c) : String(c),\n        color: \"none\",\n      }))\n  );\n\n  const phraseDisplays: PhraseDisplayProps[] = [];\n  const mappingArrows: ArrowProps2[] = [];\n  let referenceArrow: ArrowProps | undefined = undefined;\n\n  if (step.type === \"compress\") {\n    const allPhrases = [\n      ...passes[step.pass].prefixPhrases,\n      ...passes[step.pass].suffixPhrases,\n    ];\n    const phrase = allPhrases[step.phrase];\n    if (phrase.type === \"copy\") {\n      referenceArrow = {\n        x1: phrase.pos * 30 + passOffsets[step.pass] * 30 + 45,\n        x2: phrase.p * 30 + passOffsets[step.pass] * 30 + 45,\n        y: step.pass * lineDistance + 30,\n      };\n      for (let i = 0; i < phrase.l; i++) {\n        characters[step.pass][phrase.pos + i].color = \"target\";\n        if (characters[step.pass][phrase.p + i].color === \"target\") {\n          characters[step.pass][phrase.p + i].color = \"source-target\";\n        } else {\n          characters[step.pass][phrase.p + i].color = \"source\";\n        }\n      }\n    } else {\n      characters[step.pass][phrase.pos].color = \"target\";\n    }\n  }\n\n  if (step.type === \"back-mapping\") {\n    const phrase = passes[step.pass].suffixPhrasesCompressed[step.suffixPhrase];\n    drop(passes, currentBackMappingPass).forEach((pass, i) => {\n      const passIdx = i + step.pass;\n      take(\n        pass.suffixPhrasesCompressed,\n        passIdx === step.pass\n          ? step.suffixPhrase + 1\n          : passes[passIdx].suffixPhrasesCompressed.length\n      ).forEach((p, pi) => {\n        const pos = p.pos;\n        if (p.type === \"literal\") {\n          const text = `(${\n            passIdx === 0 ? String.fromCodePoint(p.symbol) : String(p.symbol)\n          },0)`;\n          phraseDisplays.push({\n            x: pos * 30 + passOffsets[passIdx] * 30 + 30,\n            y: 65 + lineDistance * passIdx,\n            l: 1,\n            text,\n          });\n        } else {\n          const text = `(${p.p},${p.l})`;\n          phraseDisplays.push({\n            x: pos * 30 + passOffsets[passIdx] * 30 + 30,\n            y: 65 + lineDistance * passIdx,\n            l: p.l,\n            text,\n          });\n        }\n\n        if (passes.length > passIdx + 1) {\n          const metaPhrase = passes[passIdx + 1].phrasesCompressed[pi];\n          mappingArrows.push({\n            x1:\n              metaPhrase.pos * 30 +\n              30 +\n              metaPhrase.l * 15 +\n              passOffsets[passIdx + 1] * 30,\n            y1: 150 + passIdx * lineDistance,\n            x2: p.pos * 30 + 30 + p.l * 15 + passOffsets[passIdx] * 30,\n            y2: 140 + passIdx * lineDistance,\n            straight: true,\n          });\n        }\n      });\n      dropWhile(\n        pass.suffixPhrases,\n        (p) => passIdx !== step.pass || p.pos < phrase.pos + phrase.l\n      ).forEach((p) => {\n        const pos = p.pos;\n        if (p.type === \"literal\") {\n          const text = `(${\n            passIdx === 0 ? String.fromCodePoint(p.symbol) : String(p.symbol)\n          },0)`;\n          phraseDisplays.push({\n            x: pos * 30 + passOffsets[passIdx] * 30 + 30,\n            y: 65 + lineDistance * passIdx,\n            l: 1,\n            text,\n          });\n        } else {\n          const text = `(${p.p},${p.l})`;\n          phraseDisplays.push({\n            x: pos * 30 + passOffsets[passIdx] * 30 + 30,\n            y: 65 + lineDistance * passIdx,\n            l: p.l,\n            text,\n          });\n        }\n      });\n    });\n  }\n\n  take(passes, passesVisible).forEach((pass, i) => {\n    take(\n      pass.prefixPhrases,\n      i === passesVisible - 1 ? phrasesVisible : pass.prefixPhrases.length\n    ).forEach((p) => {\n      const { pos } = p;\n      if (p.type === \"literal\") {\n        const text = `(${\n          i === 0 ? String.fromCodePoint(p.symbol) : String(p.symbol)\n        },0)`;\n        phraseDisplays.push({\n          x: pos * 30 + passOffsets[i] * 30 + 30,\n          y: 65 + lineDistance * i,\n          l: 1,\n          text,\n        });\n      } else {\n        const text = `(${p.p},${p.l})`;\n        phraseDisplays.push({\n          x: pos * 30 + passOffsets[i] * 30 + 30,\n          y: 65 + lineDistance * i,\n          l: p.l,\n          text,\n        });\n      }\n    });\n    take(\n      pass.suffixPhrases,\n      i === passesVisible - 1\n        ? phrasesVisible - pass.prefixPhrases.length\n        : currentBackMappingPass !== undefined && i >= currentBackMappingPass\n        ? 0\n        : pass.suffixPhrases.length\n    ).forEach((p) => {\n      const pos = p.pos;\n      if (p.type === \"literal\") {\n        const text = `(${\n          i === 0 ? String.fromCodePoint(p.symbol) : String(p.symbol)\n        },0)`;\n        phraseDisplays.push({\n          x: pos * 30 + passOffsets[i] * 30 + 30,\n          y: 65 + lineDistance * i,\n          l: 1,\n          text,\n        });\n      } else {\n        const text = `(${p.p},${p.l})`;\n        phraseDisplays.push({\n          x: pos * 30 + passOffsets[i] * 30 + 30,\n          y: 65 + lineDistance * i,\n          l: p.l,\n          text,\n        });\n      }\n    });\n  });\n\n  take(passes, mappingsVisible).forEach((pass, i) =>\n    pass.suffixPhrases.forEach((p, pi) => {\n      mappingArrows.push({\n        x1: p.pos * 30 + 30 + p.l * 15 + passOffsets[i] * 30,\n        y1: 100 + i * lineDistance,\n        x2: pi * 30 + passOffsets[i + 1] * 30 + 45,\n        y2: 150 + i * lineDistance,\n        straight: true,\n      });\n    })\n  );\n\n  return (\n    <svg\n      height={passes.length * lineDistance}\n      width={data.input.length * 30 + 60}\n    >\n      <SharedDefinitions></SharedDefinitions>\n\n      {characters.map((passCharacters, i) =>\n        passCharacters.map((props, h) => (\n          <Character key={`${i}+${h}`} {...props}></Character>\n        ))\n      )}\n\n      {phraseDisplays.map((props, i) => (\n        <PhraseDisplay key={i} {...props}></PhraseDisplay>\n      ))}\n\n      {mappingArrows.map((props, i) => (\n        <Arrow2 key={i} {...props}></Arrow2>\n      ))}\n\n      {referenceArrow && <Arrow {...referenceArrow}></Arrow>}\n    </svg>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport FormControl from \"react-bootstrap/esm/FormControl\";\nimport InputGroup from \"react-bootstrap/esm/InputGroup\";\nimport {\n  availableCompressors,\n  CompressorType,\n} from \"../compression/compressors\";\nimport { Settings } from \"../visualization/common\";\n\ninterface EmbedUrlProps {\n  type: CompressorType;\n  input: string;\n  settings: Settings;\n  step: number;\n}\n\nexport function EmbedUrl(props: EmbedUrlProps) {\n  const { type, input, settings, step } = props;\n\n  const [includeStep, setIncludeStep] = useState(true);\n  const [embedVisualization, setEmbedVisualization] = useState(false);\n\n  const currentQuery = new URLSearchParams();\n  currentQuery.set(\"type\", type);\n  currentQuery.set(\"input\", input);\n  if (availableCompressors[type].needsPrefixSize) {\n    currentQuery.set(\"prefix\", String(settings.prefixSize));\n  }\n  if (availableCompressors[type].needsWindowSize) {\n    currentQuery.set(\"window\", String(settings.windowSize));\n  }\n  if (availableCompressors[type].needsRecursionLimit) {\n    currentQuery.set(\"recursion\", String(settings.recursionLimit));\n  }\n  if (availableCompressors[type].needsReference) {\n    currentQuery.set(\"reference\", settings.reference);\n  }\n  if (includeStep) {\n    currentQuery.set(\"step\", String(step));\n  }\n\n  const pathname = embedVisualization ? \"/embed\" : \"/steps\";\n  const url = `${window.location.origin}${\n    window.location.pathname\n  }/#${pathname}?${currentQuery.toString()}`;\n\n  return (\n    <Card>\n      <Card.Body>\n        <Form>\n          <InputGroup className=\"mb-3\">\n            <FormControl value={url} readOnly />\n            <InputGroup.Append>\n              <Button\n                variant=\"outline-secondary\"\n                onClick={() => navigator.clipboard.writeText(url)}\n              >\n                Copy\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n          <Form.Check\n            custom\n            type=\"checkbox\"\n            label=\"Include current step\"\n            id=\"includeStep\"\n            onChange={(e) => setIncludeStep(e.target.checked)}\n            checked={includeStep}\n          />\n          <Form.Check\n            custom\n            type=\"checkbox\"\n            label=\"Embed visualization\"\n            id=\"embed\"\n            onChange={(e) => setEmbedVisualization(e.target.checked)}\n            checked={embedVisualization}\n          />\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n","import {\n  faFastBackward,\n  faBackward,\n  faForward,\n  faFastForward,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from \"react-bootstrap/esm/Row\";\n\ninterface StepControlsProps {\n  step: number;\n  stepsTotal: number;\n  stepChanged?: (step: number) => void;\n}\n\nexport function StepControls(props: StepControlsProps) {\n  const { step, stepsTotal, stepChanged } = props;\n  function updateStep(newStep: number) {\n    if (stepChanged) {\n      stepChanged(Math.max(0, Math.min(stepsTotal - 1, newStep)));\n    }\n  }\n  return (\n    <Container fluid>\n      <Row className=\"no-gutters\">\n        <Col xs=\"6\" md=\"2\">\n          <Button\n            className=\"w-100\"\n            disabled={step === 0}\n            onClick={() => updateStep(0)}\n          >\n            <FontAwesomeIcon icon={faFastBackward} /> First\n          </Button>\n        </Col>\n        <Col xs=\"6\" md=\"2\">\n          <Button\n            className=\"ml-2 w-100\"\n            disabled={step === 0}\n            onClick={() => updateStep(step - 1)}\n          >\n            <FontAwesomeIcon icon={faBackward} /> Prev.\n          </Button>\n        </Col>\n        <Col xs=\"12\" md=\"4\" className=\"text-center my-md-auto my-xs-4\">\n          <h5>{`${step + 1} / ${stepsTotal}`}</h5>\n        </Col>\n        <Col xs=\"6\" md=\"2\">\n          <Button\n            className=\"w-100\"\n            disabled={step >= stepsTotal - 1}\n            onClick={() => updateStep(step + 1)}\n          >\n            Next <FontAwesomeIcon icon={faForward} />\n          </Button>\n        </Col>\n\n        <Col xs=\"6\" md=\"2\">\n          <Button\n            className=\"ml-2 w-100\"\n            disabled={step >= stepsTotal - 1}\n            onClick={() => updateStep(stepsTotal - 1)}\n          >\n            Last <FontAwesomeIcon icon={faFastForward} />\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport {\n  availableCompressors,\n  CompressorType,\n} from \"../compression/compressors\";\nimport { values } from \"lodash\";\nimport { LzLikeVisualization } from \"../visualization/LzLikeVisualization\";\nimport { computeData } from \"../visualization/common\";\nimport { RlzVisualization } from \"../visualization/RlzVisualization\";\nimport { RelzVisualization } from \"../visualization/RelzVisualization\";\nimport { RelzRecVisualization } from \"../visualization/RelzRecVisualization\";\nimport { EmbedUrl } from \"../components/EmbedUrl\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport { StepControls } from \"../components/StepControls\";\nimport { useEmbedState, useSettingsFromQuery } from \"../hooks\";\n\nexport default function StepByStep() {\n  const [input, setInput] = useState(\"ABCCDBCCABDD\");\n  const [currentStep, setCurrentStep] = useState<number>(0);\n  const [selectedCompressor, setSelectedCompressor] =\n    useState<CompressorType>(\"lz77\");\n  const currentCompressor = availableCompressors[selectedCompressor];\n  const [referenceString, setReferenceString] = useState(\"\");\n  const [windowSize, setWindowSize] = useState(5);\n  const [prefixSize, setPrefixSize] = useState(5);\n  const [recursionLimit, setRecursionLimit] = useState(5);\n  const query = useSettingsFromQuery();\n  useEffect(() => {\n    console.log(query);\n    setSelectedCompressor(query.type);\n    setInput(query.input);\n    setReferenceString(query.settings.reference);\n    setWindowSize(query.settings.windowSize);\n    setPrefixSize(query.settings.prefixSize);\n    setRecursionLimit(query.settings.recursionLimit);\n    setCurrentStep(query.step);\n  }, [query]);\n\n  const data = computeData(selectedCompressor, input, {\n    reference: referenceString,\n    windowSize,\n    prefixSize,\n    recursionLimit,\n  });\n  const isEmbeded = useEmbedState();\n  useEffect(() => {\n    setCurrentStep(Math.min(data.steps.length - 1, currentStep));\n  }, [data, data.steps.length, currentStep]);\n\n  return (\n    <>\n      <Container>\n        <Row className=\"mt-5\">\n          <Col>\n            <Card>\n              <Card.Header>Settings</Card.Header>\n              <Card.Body>\n                <Form>\n                  <Form.Group>\n                    <Form.Label>Input String</Form.Label>\n                    <Form.Control\n                      value={input}\n                      onChange={(e) => setInput(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Row>\n                    <Col xs=\"12\" md=\"6\">\n                      <Form.Group>\n                        <Form.Label>Compression Algorithm</Form.Label>\n                        {values(availableCompressors).map((c) => (\n                          <Form.Check\n                            key={c.type}\n                            label={c.title}\n                            name=\"compressor-group\"\n                            type=\"radio\"\n                            checked={selectedCompressor === c.type}\n                            onChange={() => setSelectedCompressor(c.type)}\n                          />\n                        ))}\n                      </Form.Group>\n                    </Col>\n                    <Col xs=\"12\" md=\"6\">\n                      {currentCompressor.needsReference && (\n                        <Form.Group key=\"reference-string\">\n                          <Form.Label>Reference</Form.Label>\n                          <Form.Control\n                            placeholder=\"Reference String\"\n                            value={referenceString}\n                            onChange={(e) => setReferenceString(e.target.value)}\n                          />\n                        </Form.Group>\n                      )}\n                      {currentCompressor.needsPrefixSize && (\n                        <Form.Group>\n                          <Form.Label>Prefix Size</Form.Label>\n                          <Form.Control\n                            type=\"number\"\n                            value={prefixSize}\n                            min={0}\n                            onChange={(e) =>\n                              setPrefixSize(parseInt(e.target.value))\n                            }\n                          />\n                        </Form.Group>\n                      )}\n                      {currentCompressor.needsWindowSize && (\n                        <Form.Group>\n                          <Form.Label>Window Size</Form.Label>\n                          <Form.Control\n                            type=\"number\"\n                            value={windowSize}\n                            min={0}\n                            onChange={(e) =>\n                              setWindowSize(parseInt(e.target.value))\n                            }\n                          />\n                        </Form.Group>\n                      )}\n                      {currentCompressor.needsRecursionLimit && (\n                        <Form.Group>\n                          <Form.Label>Recursion Limit</Form.Label>\n                          <Form.Control\n                            type=\"number\"\n                            value={recursionLimit}\n                            min={0}\n                            onChange={(e) =>\n                              setRecursionLimit(parseInt(e.target.value))\n                            }\n                          />\n                        </Form.Group>\n                      )}\n                    </Col>\n                  </Row>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col>\n            <Card>\n              <Card.Body>\n                <Container>\n                  <Row className=\"justify-content-center overflow-auto\">\n                    <Col xs=\"auto\">\n                      {data.type === \"lz-like\" && (\n                        <LzLikeVisualization\n                          data={data}\n                          step={currentStep}\n                        ></LzLikeVisualization>\n                      )}\n\n                      {data.type === \"rlz\" && (\n                        <RlzVisualization\n                          data={data}\n                          step={currentStep}\n                        ></RlzVisualization>\n                      )}\n                      {data.type === \"relz\" && (\n                        <RelzVisualization\n                          data={data}\n                          step={currentStep}\n                        ></RelzVisualization>\n                      )}\n                      {data.type === \"relz-rec\" && (\n                        <RelzRecVisualization\n                          data={data}\n                          step={currentStep}\n                        ></RelzRecVisualization>\n                      )}\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-center no-gutters\">\n                    <Col xs=\"12\" lg=\"8\">\n                      <StepControls\n                        step={currentStep}\n                        stepsTotal={data.steps.length}\n                        stepChanged={setCurrentStep}\n                      ></StepControls>\n                    </Col>\n                  </Row>\n                </Container>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {!isEmbeded && (\n          <Row className=\"mt-3 mb-5\">\n            <Col>\n              <EmbedUrl\n                type={selectedCompressor}\n                input={input}\n                settings={{\n                  prefixSize,\n                  recursionLimit,\n                  reference: referenceString,\n                  windowSize,\n                }}\n                step={currentStep}\n              ></EmbedUrl>\n            </Col>\n          </Row>\n        )}\n      </Container>\n    </>\n  );\n}\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Nav from \"react-bootstrap/esm/Nav\";\nimport Navbar from \"react-bootstrap/esm/Navbar\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n  faBalanceScaleRight,\n  faQuestion,\n  faStepForward,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport function AppNavbar() {\n  const location = useLocation();\n  const links = [\n    { to: \"/compare\", title: \"Compare\", icon: faBalanceScaleRight },\n    { to: \"/steps\", title: \"Step by Step\", icon: faStepForward },\n    { to: \"/quiz\", title: \"Quiz\", icon: faQuestion },\n  ];\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand to=\"/\" as={Link}>\n          Lempel-Ziv Playground\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {links.map(({ to, title, icon }) => (\n              <Nav.Link\n                key={to}\n                to={to}\n                as={Link}\n                active={location.pathname === to}\n              >\n                <FontAwesomeIcon icon={icon} /> {title}\n              </Nav.Link>\n            ))}\n          </Nav>\n          <Nav className=\"justify-content-end\">\n            <Nav.Link\n              href={\"https://github.com/jannikw/lempel-ziv\"}\n              target=\"_blank\"\n            >\n              <FontAwesomeIcon icon={faGithub} /> Source Code\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport { StepControls } from \"../components/StepControls\";\nimport { useSettingsFromQuery } from \"../hooks\";\nimport { computeData } from \"../visualization/common\";\nimport { LzLikeVisualization } from \"../visualization/LzLikeVisualization\";\nimport { RelzRecVisualization } from \"../visualization/RelzRecVisualization\";\nimport { RelzVisualization } from \"../visualization/RelzVisualization\";\nimport { RlzVisualization } from \"../visualization/RlzVisualization\";\n\nexport function Embed() {\n  const { type, input, step: initialStep, settings } = useSettingsFromQuery();\n  const data = computeData(type, input, settings);\n  const [step, setStep] = useState(0);\n\n  useEffect(() => {\n    setStep(initialStep);\n  }, [initialStep]);\n\n  return (\n    <Container fluid className=\"h-100\">\n      <Row className=\"justify-content-center overflow-auto\">\n        <Col xs=\"auto\">\n          {data?.type === \"lz-like\" && (\n            <LzLikeVisualization data={data} step={step}></LzLikeVisualization>\n          )}\n          {data?.type === \"rlz\" && (\n            <RlzVisualization data={data} step={step}></RlzVisualization>\n          )}\n          {data.type === \"relz\" && (\n            <RelzVisualization data={data} step={step}></RelzVisualization>\n          )}\n          {data.type === \"relz-rec\" && (\n            <RelzRecVisualization\n              data={data}\n              step={step}\n            ></RelzRecVisualization>\n          )}\n        </Col>\n      </Row>\n      <Row\n        className=\"mb-3 justify-content-center\"\n        style={{ position: \"absolute\", bottom: \"0\", width: \"100%\" }}\n      >\n        <Col lg=\"8\" md=\"12\">\n          <StepControls\n            step={step}\n            stepsTotal={data.steps.length}\n            stepChanged={setStep}\n          ></StepControls>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import {\n  faCheckCircle,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { some } from \"lodash\";\nimport React from \"react\";\nimport { ReactNode } from \"react\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport Row from \"react-bootstrap/esm/Row\";\n\nexport type TaskInput = (\n  | {\n      type: \"number\";\n      initialValue: number;\n      min?: number;\n      max?: number;\n      validate?: (value: number) => boolean;\n    }\n  | {\n      type: \"text\";\n      initialValue: string;\n      validate?: (value: string) => boolean;\n    }\n) & { text: string };\n\nexport interface TaskDescription {\n  text: string;\n  inputs: TaskInput[];\n  check: (input: any[]) => boolean;\n  render: (input: any[]) => ReactNode;\n}\n\nexport function validateTaskInputs(\n  description: TaskDescription,\n  inputs: any[]\n) {\n  const invalidValues = description.inputs.map((input, i) => {\n    if (input.validate) {\n      if (input.type === \"number\") {\n        return !input.validate(inputs[i]);\n      }\n      if (input.type === \"text\") {\n        return !input.validate(inputs[i]);\n      }\n    }\n\n    return false;\n  });\n\n  return invalidValues;\n}\n\nexport function checkTask(\n  description: TaskDescription,\n  inputs: any[]\n): boolean {\n  return (\n    !some(validateTaskInputs(description, inputs)) && description.check(inputs)\n  );\n}\n\nexport interface TaskState {\n  currentInputs: any[];\n  done: boolean;\n}\n\nexport interface TaskProps {\n  description: TaskDescription;\n  number: number;\n  state: TaskState;\n  onStateChanged: (state: TaskState) => void;\n}\n\nexport function getInitialState(description: TaskDescription): TaskState {\n  return {\n    currentInputs: description.inputs.map((i) => i.initialValue),\n    done: false,\n  };\n}\n\nexport function restoreStates(\n  descriptions: TaskDescription[],\n  data: any\n): TaskState[] {\n  const states: TaskState[] = [];\n\n  for (let i = 0; i < descriptions.length; i++) {\n    if (Array.isArray(data) && i < data.length) {\n      if (data) {\n      }\n    }\n  }\n  return states;\n}\n\nexport function Task(props: TaskProps) {\n  const { description, number, state, onStateChanged } = props;\n  const invalidValues = validateTaskInputs(description, state.currentInputs);\n\n  function updateInput(inputIdx: number, input: any) {\n    const newInputs = state.currentInputs.map((v, i) =>\n      i === inputIdx ? input : v\n    );\n    const done = checkTask(description, newInputs);\n    onStateChanged({\n      currentInputs: newInputs,\n      done,\n    });\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <Row>\n          <Col>Task {number}</Col>\n          <Col className=\"d-flex justify-content-end\">\n            {state.done ? (\n              <span className=\"text-success\">\n                <FontAwesomeIcon icon={faCheckCircle} /> Correct\n              </span>\n            ) : (\n              <span className=\"text-danger\">\n                <FontAwesomeIcon icon={faExclamationCircle} /> Wrong\n              </span>\n            )}\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body>\n        <p>{description.text}</p>\n        <Form>\n          {description.inputs.map((input, i) => (\n            <Form.Group key={i} as={Row}>\n              <Form.Label column xs=\"4\">\n                {input.text}\n              </Form.Label>\n              <Col xs=\"8\">\n                {input.type === \"number\" && (\n                  <Form.Control\n                    type=\"number\"\n                    min={input.min}\n                    max={input.max}\n                    value={state.currentInputs[i]}\n                    onChange={(e) => updateInput(i, parseInt(e.target.value))}\n                    isInvalid={invalidValues[i]}\n                  />\n                )}\n                {input.type === \"text\" && (\n                  <Form.Control\n                    type=\"text\"\n                    value={state.currentInputs[i]}\n                    onChange={(e) => updateInput(i, e.target.value)}\n                    isInvalid={invalidValues[i]}\n                  />\n                )}\n              </Col>\n            </Form.Group>\n          ))}\n          {description.render(state.currentInputs)}\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n","import { faCheckDouble, faTasks } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { sumBy } from \"lodash\";\nimport React, { Fragment, useState } from \"react\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport {\n  getInitialState,\n  Task,\n  TaskDescription,\n  TaskState,\n} from \"../components/Task\";\nimport { computeData } from \"../visualization/common\";\nimport { PhrasesVisualization } from \"../visualization/PhrasesVisualization\";\n\nconst tasks: TaskDescription[] = [\n  {\n    text: \"Find a string that is at least 15 characters long and compresses to the same number of phrases using LZ77 and ReLZ. ReLZ must use prefix size between 3 and 6.\",\n    inputs: [\n      {\n        type: \"text\",\n        text: \"Input\",\n        initialValue: \"ABC\",\n        validate(value: string) {\n          return value.length >= 15;\n        },\n      },\n      {\n        type: \"number\",\n        text: \"Prefix Length\",\n        initialValue: 5,\n        min: 3,\n        max: 6,\n        validate(value) {\n          return value >= 3 && value <= 6;\n        },\n      },\n    ],\n    check([input, prefixSize]) {\n      const lz77Data = computeData(\"lz77\", input, {});\n      const relzData = computeData(\"relz\", input, {\n        prefixSize,\n      });\n      return lz77Data.phrases.length === relzData.phrases.length;\n    },\n    render([input, prefixSize]) {\n      const lz77Data = computeData(\"lz77\", input, {});\n      const relzData = computeData(\"relz\", input, {\n        prefixSize,\n      });\n      return (\n        <>\n          <Row>\n            <Col xs=\"12\" lg=\"2\">\n              LZ77 phrases:\n            </Col>\n            <Col className=\"overflow-auto\">\n              <PhrasesVisualization data={lz77Data} />\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\" lg=\"2\">\n              ReLZ phrases:\n            </Col>\n            <Col className=\"overflow-auto\">\n              <PhrasesVisualization data={relzData} />\n            </Col>\n          </Row>\n        </>\n      );\n    },\n  },\n  {\n    text: \"Find a string that is at least 15 characters long and compresses better using ReLZ than with RLZ (using prefix as reference). The prefix size is set to 5 for both compressors.\",\n    inputs: [\n      {\n        type: \"text\",\n        text: \"Input\",\n        initialValue: \"ABC\",\n        validate(value: string) {\n          return value.length >= 15;\n        },\n      },\n    ],\n    check([input]) {\n      const prefixSize = 5;\n      const rlzPrefData = computeData(\"rlz-pref\", input, { prefixSize });\n      const relzData = computeData(\"relz\", input, {\n        prefixSize,\n      });\n      return rlzPrefData.phrases.length > relzData.phrases.length;\n    },\n    render([input]) {\n      const prefixSize = 5;\n      const rlzPrefData = computeData(\"rlz-pref\", input, { prefixSize });\n      const relzData = computeData(\"relz\", input, {\n        prefixSize,\n      });\n      return (\n        <>\n          <Row>\n            <Col xs=\"12\" lg=\"2\">\n              RLZ using prefix:\n            </Col>\n            <Col className=\"overflow-auto\">\n              <PhrasesVisualization data={rlzPrefData} />\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\" lg=\"2\">\n              ReLZ phrases:\n            </Col>\n            <Col className=\"overflow-auto\">\n              <PhrasesVisualization data={relzData} />\n            </Col>\n          </Row>\n        </>\n      );\n    },\n  },\n  {\n    text: \"Find a string that is at least 15 characters long and LZ is able to compress to fewer than 8 phrases.\",\n    inputs: [\n      {\n        type: \"text\",\n        text: \"Input\",\n        initialValue: \"ABC\",\n        validate(value: string) {\n          return value.length >= 15;\n        },\n      },\n    ],\n    check([input]) {\n      const data = computeData(\"lz77\", input, {});\n      return data.phrases.length < 8;\n    },\n    render([input]) {\n      const data = computeData(\"lz77\", input, {});\n      return (\n        <>\n          <Row>\n            <Col xs=\"12\" lg=\"2\">\n              LZ phrases:\n            </Col>\n            <Col className=\"overflow-auto\">\n              <PhrasesVisualization data={data} />\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\" lg=\"2\">\n              Number of phrases:\n            </Col>\n            <Col className=\"overflow-auto\">z = {data.phrases.length}</Col>\n          </Row>\n        </>\n      );\n    },\n  },\n  {\n    text: \"Find a reference string that allows the input to be compressed to fewer than 8 phrases.\",\n    inputs: [\n      {\n        type: \"text\",\n        text: \"Reference\",\n        initialValue: \"ABC\",\n      },\n    ],\n    check([reference]) {\n      const data = computeData(\"rlz\", \"AABBCDDEEDBBBF\", { reference });\n      return data.phrases.length < 8;\n    },\n    render([reference]) {\n      const data = computeData(\"rlz\", \"AABBCDDEEDBBBF\", { reference });\n      return (\n        <>\n          <Row>\n            <Col xs=\"12\" lg=\"2\">\n              RLZ phrases:\n            </Col>\n            <Col className=\"overflow-auto\">\n              <PhrasesVisualization data={data} />\n            </Col>\n          </Row>\n        </>\n      );\n    },\n  },\n];\n\nexport function Quiz() {\n  const [states, setStates] = useState(tasks.map(getInitialState));\n  const finishedTaskCount = sumBy(states, (s) => (s.done ? 1 : 0));\n  const allTasksDone = tasks.length === finishedTaskCount;\n\n  function updateState(taskIdx: number, state: TaskState) {\n    setStates(states.map((v, i) => (i === taskIdx ? state : v)));\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        <Col>\n          <Card>\n            <Card.Header>\n              <FontAwesomeIcon icon={faTasks} /> Tasks\n            </Card.Header>\n            <Card.Body>\n              <Row>\n                <Col>\n                  {allTasksDone\n                    ? \"All tasks done! 🥳\"\n                    : \"There are still tasks left to complete:\"}\n                </Col>\n                <Col className=\"d-flex justify-content-end\">\n                  <span>\n                    {finishedTaskCount} / {tasks.length} Completed\n                    <FontAwesomeIcon icon={faCheckDouble} className=\"ml-2\" />\n                  </span>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <ul>\n                    {states.map(({ done }, i) =>\n                      done ? (\n                        <Fragment key={i}></Fragment>\n                      ) : (\n                        <li key={i}>Task {i + 1}</li>\n                      )\n                    )}\n                  </ul>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {tasks.map((task, i) => (\n        <Row key={i} className=\"mt-3\">\n          <Col>\n            <Task\n              description={task}\n              number={i + 1}\n              state={states[i]}\n              onStateChanged={(state) => updateState(i, state)}\n            ></Task>\n          </Col>\n        </Row>\n      ))}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\nimport { Link } from \"react-router-dom\";\n\nexport function Home() {\n  return (\n    <Container className=\"mt-5\">\n      <Jumbotron>\n        <h1>Lempel-Ziv Playground</h1>\n        <p>\n          This page lets you play around with the original Lempel-Ziv algorithm\n          from 1977 and other variants of the algorithm. You can compare\n          different Lempel-Ziv variants with each other{\" \"}\n          <Link to=\"/compare\">here</Link> and find out what parameters work well\n          on different inputs. You can go through the compression process step\n          by step for each algorithm and see how an input is processed{\" \"}\n          <Link to=\"/slides\">here</Link>. Finally, you can take a quiz on the\n          algorithms and think about some properties of the algorithms{\" \"}\n          <Link to=\"/quiz\">here</Link>.\n        </p>\n      </Jumbotron>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Compare } from \"./pages/Compare\";\nimport StepByStep from \"./pages/StepByStep\";\nimport { AppNavbar } from \"./components/AppNavbar\";\nimport { useEmbedState } from \"./hooks\";\nimport { Embed } from \"./pages/Embed\";\nimport { Quiz } from \"./pages/Quiz\";\nimport { Home } from \"./pages/Home\";\n\nfunction App() {\n  const embedded = useEmbedState();\n\n  return (\n    <>\n      {!embedded && <AppNavbar></AppNavbar>}\n      <Switch>\n        <Route exact path=\"/\">\n          <Home></Home>\n        </Route>\n        <Route exact path=\"/compare\">\n          <Compare></Compare>\n        </Route>\n        <Route exact path=\"/steps\">\n          <StepByStep></StepByStep>\n        </Route>\n        <Route exact path=\"/quiz\">\n          <Quiz></Quiz>\n        </Route>\n        <Route exact path=\"/embed\">\n          <Embed></Embed>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}